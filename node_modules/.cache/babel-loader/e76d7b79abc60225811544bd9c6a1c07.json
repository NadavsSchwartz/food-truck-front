{"ast":null,"code":"'use strict';\n\nvar P = require('bluebird');\n\nvar R = require('ramda');\n\nvar plaidEnvironments = require('./plaidEnvironments');\n\nvar plaidRequest = require('./plaidRequest');\n\nvar wrapPromise = require('./wrapPromise'); // Default version of Plaid API, if not specified by the client.\n\n\nconst DEFAULT_VERSION = '2020-09-14'; // Client(String, String, String, String, Object?)\n\nfunction Client(configs) {\n  if (!R.is(Object, configs)) {\n    throw new Error('Unexpected parameter type. ' + 'Refer to https://github.com/plaid/plaid-node ' + 'for how to create a Plaid client.');\n  }\n\n  if (R.isNil(configs.clientID)) {\n    throw new Error('Missing Plaid \"clientID\"');\n  }\n\n  if (R.isNil(configs.secret)) {\n    throw new Error('Missing Plaid \"secret\"');\n  }\n\n  if (!R.any(R.equals(configs.env), R.values(plaidEnvironments))) {\n    throw new Error('Invalid Plaid environment');\n  }\n\n  if (arguments.length > 1) {\n    throw new Error('Too many arguments to constructor');\n  }\n\n  this.client_id = configs.clientID;\n  this.secret = configs.secret;\n  this.env = configs.env;\n\n  if (configs.options == null) {\n    configs.options = {};\n  }\n\n  if (configs.options.version == null) {\n    configs.options.version = DEFAULT_VERSION;\n  }\n\n  this.client_request_opts = configs.options;\n} // Private\n\n\nvar requestWithAccessToken = function (path) {\n  return function (access_token, options, cb) {\n    return this._authenticatedRequest({\n      path: path,\n      body: {\n        access_token: access_token\n      }\n    }, options, cb);\n  };\n};\n\nClient.prototype._authenticatedRequest = function _authenticatedRequest(requestSpec, options, cb) {\n  // juggle arguments\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  } else {\n    requestSpec.body.options = options;\n  }\n\n  var context = R.merge({\n    env: this.env\n  }, {\n    client_id: this.client_id,\n    secret: this.secret\n  });\n  return plaidRequest(context, requestSpec, this.client_request_opts, cb);\n}; // createPublicToken(String, Object, Function)\n\n\nClient.prototype.createPublicToken = function (access_token, options, cb) {\n  const createPublicTokenRequest = requestWithAccessToken('/item/public_token/create', false);\n  console.warn(`Warning: this method will be deprecated in a future version.\n  To replace the public_token for initializing Link,\n  look into the link_token at\n  https://plaid.com/docs/api/tokens/#linktokencreate`);\n  return createPublicTokenRequest.call(this, access_token, options, cb);\n};\n\nconst linkTokenConfigFields = ['user', 'client_name', 'products', 'country_codes', 'language', 'webhook', 'access_token', 'link_customization_name', 'redirect_uri', 'android_package_name', 'account_filters', 'cross_app_item_add', 'payment_initiation']; // createLinkToken(CreateLinkTokenOptions, Function)\n\nClient.prototype.createLinkToken = function (options, cb) {\n  const body = linkTokenConfigFields.reduce((body, field) => {\n    body[field] = options[field];\n    return body;\n  }, {});\n  return this._authenticatedRequest({\n    path: '/link/token/create',\n    body: body\n  }, cb);\n}; // getLinkToken(CreateLinkTokenOptions, Function)\n\n\nClient.prototype.getLinkToken = function (link_token, cb) {\n  return this._authenticatedRequest({\n    path: '/link/token/get',\n    body: {\n      link_token\n    }\n  }, cb);\n}; // exchangePublicToken(String, Function)\n\n\nClient.prototype.exchangePublicToken = function (public_token, cb) {\n  return this._authenticatedRequest({\n    path: '/item/public_token/exchange',\n    body: {\n      public_token: public_token\n    }\n  }, cb);\n}; // updateItemWebhook(String, String, Function)\n\n\nClient.prototype.updateItemWebhook = function (access_token, webhook, cb) {\n  return this._authenticatedRequest({\n    path: '/item/webhook/update',\n    body: {\n      access_token: access_token,\n      webhook: webhook\n    }\n  }, cb);\n}; // createProcessorToken(String, String, String, Function)\n\n\nClient.prototype.createProcessorToken = function (access_token, account_id, processor, cb) {\n  var endpoint = '/processor/token/create';\n  const options = {\n    access_token,\n    account_id,\n    processor\n  };\n\n  if (processor === 'stripe') {\n    endpoint = '/processor/stripe/bank_account_token/create';\n    delete options.processor;\n  } else if (processor === 'apex') {\n    endpoint = '/processor/apex/processor_token/create';\n    delete options.processor;\n  }\n\n  return this._authenticatedRequest({\n    path: endpoint,\n    body: options\n  }, cb);\n};\n\nClient.prototype.createStripeToken = function (access_token, account_id, cb) {\n  return this.createProcessorToken(access_token, account_id, 'stripe', cb);\n}; // invalidateAccessToken(String, Function)\n\n\nClient.prototype.invalidateAccessToken = requestWithAccessToken('/item/access_token/invalidate'); // removeItem(String, Function)\n\nClient.prototype.removeItem = requestWithAccessToken('/item/remove'); // getItem(String, Function)\n\nClient.prototype.getItem = requestWithAccessToken('/item/get'); // importItem([String], Object, Object?, Function)\n\nClient.prototype.importItem = function (products, user_auth, options, cb) {\n  return this._authenticatedRequest({\n    path: '/item/import',\n    body: {\n      products: products,\n      user_auth: user_auth\n    }\n  }, options, cb);\n}; // getAccounts(String, Object?, Function)\n\n\nClient.prototype.getAccounts = requestWithAccessToken('/accounts/get'); // getBalance(String, Object?, Function)\n\nClient.prototype.getBalance = requestWithAccessToken('/accounts/balance/get'); // getAuth(String, Object?, Function)\n\nClient.prototype.getAuth = requestWithAccessToken('/auth/get'); // getIncome(String, Function)\n// getIdentity(String, Function)\n\nClient.prototype.getIdentity = requestWithAccessToken('/identity/get'); // getIncome(String, Function)\n\nClient.prototype.getIncome = requestWithAccessToken('/income/get'); // getTransactions(String, Date, Date, Object?, Function)\n\nClient.prototype.getTransactions = function (access_token, start_date, end_date, options, cb) {\n  return this._authenticatedRequest({\n    path: '/transactions/get',\n    body: {\n      access_token: access_token,\n      start_date: start_date,\n      end_date: end_date\n    }\n  }, options, cb);\n}; // getAllTransactions(String, Date, Date, Object?, Function)\n\n\nClient.prototype.getAllTransactions = function (access_token, start_date, end_date, options, cb) {\n  // juggle arguments\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  } else {\n    options = R.defaultTo({}, options);\n  }\n\n  var self = this;\n  return wrapPromise(P.coroutine(function* () {\n    var transactions = [];\n    var transactionsCount = 0;\n    var response = {};\n\n    while (true) {\n      const transactionsResponse = yield self.getTransactions(access_token, start_date, end_date, R.merge(options, {\n        count: 500,\n        // largest allowed value\n        offset: transactions.length\n      }));\n      response.accounts = transactionsResponse.accounts;\n      response.item = transactionsResponse.item;\n\n      if (transactionsResponse.transactions != null) {\n        transactions = R.concat(transactions, transactionsResponse.transactions);\n        transactionsCount += transactionsResponse.transactions.length;\n      }\n\n      if (transactionsCount >= transactionsResponse.total_transactions) {\n        break;\n      }\n    }\n\n    response.total_transactions = transactionsCount;\n    response.transactions = transactions;\n    return response;\n  })(), cb, {\n    no_spread: true\n  });\n}; // transactionsRefresh(String, Function)\n\n\nClient.prototype.refreshTransactions = requestWithAccessToken('/transactions/refresh'); // getCreditDetails(String, Function)\n\nClient.prototype.getCreditDetails = requestWithAccessToken('/credit_details/get'); // getHoldings(String, Function)\n\nClient.prototype.getHoldings = requestWithAccessToken('/investments/holdings/get'); // getInvestmentTransactions(String, Date, Date, Object?, Function)\n\nClient.prototype.getInvestmentTransactions = function (access_token, start_date, end_date, options, cb) {\n  return this._authenticatedRequest({\n    path: '/investments/transactions/get',\n    body: {\n      access_token: access_token,\n      start_date: start_date,\n      end_date: end_date\n    }\n  }, options, cb);\n}; // getLiabilities(String, Function)\n\n\nClient.prototype.getLiabilities = requestWithAccessToken('/liabilities/get'); // createAssetReport([String], Number, Object, Function)\n\nClient.prototype.createAssetReport = function (access_tokens, days_requested, options, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/create',\n    body: {\n      access_tokens: access_tokens,\n      days_requested: days_requested\n    }\n  }, options, cb);\n}; // filterAssetReport(String, [String], Function)\n\n\nClient.prototype.filterAssetReport = function (asset_report_token, account_ids_to_exclude, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/filter',\n    body: {\n      asset_report_token: asset_report_token,\n      account_ids_to_exclude: account_ids_to_exclude\n    }\n  }, cb);\n}; // refreshAssetReport(String, Number, Object?, Function)\n\n\nClient.prototype.refreshAssetReport = function (asset_report_token, days_requested, options, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/refresh',\n    body: {\n      asset_report_token: asset_report_token,\n      days_requested: days_requested\n    }\n  }, options, cb);\n}; // getAssetReport(String, Boolean, Function)\n\n\nClient.prototype.getAssetReport = function (asset_report_token, include_insights, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/get',\n    body: {\n      asset_report_token: asset_report_token,\n      include_insights: include_insights\n    }\n  }, cb);\n}; // getAssetReportPdf(String, Function)\n\n\nClient.prototype.getAssetReportPdf = function (asset_report_token, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/pdf/get',\n    body: {\n      asset_report_token: asset_report_token\n    },\n    binary: true\n  }, cb);\n}; // createAuditCopy(String, String, Function)\n\n\nClient.prototype.createAuditCopy = function (asset_report_token, auditor_id, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/audit_copy/create',\n    body: {\n      asset_report_token: asset_report_token,\n      auditor_id: auditor_id\n    }\n  }, cb);\n}; // getAuditCopy(String, Function)\n\n\nClient.prototype.getAuditCopy = function (audit_copy_token, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/audit_copy/get',\n    body: {\n      audit_copy_token: audit_copy_token\n    }\n  }, cb);\n}; // removeAuditCopy(String, Function)\n\n\nClient.prototype.removeAuditCopy = function (audit_copy_token, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/audit_copy/remove',\n    body: {\n      audit_copy_token: audit_copy_token\n    }\n  }, cb);\n}; // removeAssetReport(String, Function)\n\n\nClient.prototype.removeAssetReport = function (asset_report_token, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/remove',\n    body: {\n      asset_report_token: asset_report_token\n    }\n  }, cb);\n}; // createPaymentRecipient(String, String, Object, Object, Function)\n\n\nClient.prototype.createPaymentRecipient = function (name, iban, address, bacs, cb) {\n  return this._authenticatedRequest({\n    path: '/payment_initiation/recipient/create',\n    body: {\n      name: name,\n      iban: iban != null ? iban : undefined,\n      address: address,\n      bacs: bacs != null ? bacs : undefined\n    }\n  }, cb);\n}; // getPaymentRecipient(String, Function)\n\n\nClient.prototype.getPaymentRecipient = function (recipient_id, cb) {\n  return this._authenticatedRequest({\n    path: '/payment_initiation/recipient/get',\n    body: {\n      recipient_id: recipient_id\n    }\n  }, cb);\n}; // listPaymentRecipients(Function)\n\n\nClient.prototype.listPaymentRecipients = function (cb) {\n  return this._authenticatedRequest({\n    path: '/payment_initiation/recipient/list'\n  }, cb);\n}; // createPayment(String, String, Object, Function)\n\n\nClient.prototype.createPayment = function (recipient_id, reference, amount, cb) {\n  return this._authenticatedRequest({\n    path: '/payment_initiation/payment/create',\n    body: {\n      recipient_id: recipient_id,\n      reference: reference,\n      amount: amount\n    }\n  }, cb);\n}; // createPaymentToken(String, Function)\n\n\nClient.prototype.createPaymentToken = function (payment_id, cb) {\n  console.warn(`Warning: this method will be deprecated in a future version.\n    To replace the payment_token,\n    look into the link_token at\n    https://plaid.com/docs/api/tokens/#linktokencreate.`);\n  return this._authenticatedRequest({\n    path: '/payment_initiation/payment/token/create',\n    body: {\n      payment_id: payment_id\n    }\n  }, cb);\n}; // getPayment(String, Function)\n\n\nClient.prototype.getPayment = function (payment_id, cb) {\n  return this._authenticatedRequest({\n    path: '/payment_initiation/payment/get',\n    body: {\n      payment_id: payment_id\n    }\n  }, cb);\n}; // listPayments(Object, Function)\n\n\nClient.prototype.listPayments = function (options, cb) {\n  return this._authenticatedRequest({\n    path: '/payment_initiation/payment/list',\n    body: options\n  }, cb);\n}; // getDepositSwitch(String, Object?, Function)\n\n\nClient.prototype.getDepositSwitch = function (deposit_switch_id, options, cb) {\n  return this._authenticatedRequest({\n    path: '/deposit_switch/get',\n    body: {\n      deposit_switch_id: deposit_switch_id\n    }\n  }, options, cb);\n}; // createDepositSwitch(String, String, Object?, Function)\n\n\nClient.prototype.createDepositSwitch = function (target_account_id, target_access_token, options, cb) {\n  return this._authenticatedRequest({\n    path: '/deposit_switch/create',\n    body: {\n      target_account_id: target_account_id,\n      target_access_token: target_access_token\n    }\n  }, options, cb);\n}; // createDepositSwitchToken(String, Object?, Function)\n\n\nClient.prototype.createDepositSwitchToken = function (deposit_switch_id, options, cb) {\n  return this._authenticatedRequest({\n    path: '/deposit_switch/token/create',\n    body: {\n      deposit_switch_id: deposit_switch_id\n    }\n  }, options, cb);\n}; // getInstitutions(Number, Number, [String], Object?, Function);\n\n\nClient.prototype.getInstitutions = function (count, offset, country_codes, options, cb) {\n  return this._authenticatedRequest({\n    path: '/institutions/get',\n    body: {\n      count: count,\n      offset: offset,\n      country_codes: country_codes\n    }\n  }, options, cb);\n}; // getInstitutionById(String, [String], Object?, Function);\n\n\nClient.prototype.getInstitutionById = function (institution_id, country_codes, options, cb) {\n  return this._authenticatedRequest({\n    path: '/institutions/get_by_id',\n    body: {\n      institution_id: institution_id,\n      country_codes: country_codes\n    }\n  }, options, cb);\n}; // searchInstitutionsByName(String, [String], Object?, Function)\n\n\nClient.prototype.searchInstitutionsByName = function (query, products, country_codes, options, cb) {\n  return this._authenticatedRequest({\n    path: '/institutions/search',\n    body: {\n      query: query,\n      products: products,\n      country_codes: country_codes\n    }\n  }, options, cb);\n}; // getCategories(Function)\n\n\nClient.prototype.getCategories = function (cb) {\n  return plaidRequest({\n    env: this.env\n  }, {\n    path: '/categories/get'\n  }, this.client_request_opts, cb);\n}; // resetLogin(String, Function) - sandbox only\n\n\nClient.prototype.resetLogin = requestWithAccessToken('/sandbox/item/reset_login'); // getWebhookVerificationKey(String, Function)\n\nClient.prototype.getWebhookVerificationKey = function (key_id, cb) {\n  return this._authenticatedRequest({\n    path: '/webhook_verification_key/get',\n    body: {\n      key_id: key_id\n    }\n  }, cb);\n}; // sandboxPublicTokenCreate(String, Array, Object?, Function) - sandbox only\n\n\nClient.prototype.sandboxPublicTokenCreate = function (institution_id, initial_products, options, cb) {\n  return this._authenticatedRequest({\n    path: '/sandbox/public_token/create',\n    body: {\n      institution_id: institution_id,\n      initial_products: initial_products\n    }\n  }, options, cb);\n}; // sandboxItemFireWebhook(String, String, Function) - sandbox only\n\n\nClient.prototype.sandboxItemFireWebhook = function (access_token, webhook_code, cb) {\n  return this._authenticatedRequest({\n    path: '/sandbox/item/fire_webhook',\n    body: {\n      access_token: access_token,\n      webhook_code: webhook_code\n    }\n  }, cb);\n}; // sandboxItemSetVerificationStatus(String, String, String, Function)\n// - sandbox only\n\n\nClient.prototype.sandboxItemSetVerificationStatus = function (access_token, account_id, verification_status, cb) {\n  return this._authenticatedRequest({\n    path: '/sandbox/item/set_verification_status',\n    body: {\n      access_token: access_token,\n      account_id: account_id,\n      verification_status: verification_status\n    }\n  }, cb);\n};\n\nmodule.exports = Client;","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/plaid/lib/PlaidClient.js"],"names":["P","require","R","plaidEnvironments","plaidRequest","wrapPromise","DEFAULT_VERSION","Client","configs","is","Object","Error","isNil","clientID","secret","any","equals","env","values","arguments","length","client_id","options","version","client_request_opts","requestWithAccessToken","path","access_token","cb","_authenticatedRequest","body","prototype","requestSpec","context","merge","createPublicToken","createPublicTokenRequest","console","warn","call","linkTokenConfigFields","createLinkToken","reduce","field","getLinkToken","link_token","exchangePublicToken","public_token","updateItemWebhook","webhook","createProcessorToken","account_id","processor","endpoint","createStripeToken","invalidateAccessToken","removeItem","getItem","importItem","products","user_auth","getAccounts","getBalance","getAuth","getIdentity","getIncome","getTransactions","start_date","end_date","getAllTransactions","defaultTo","self","coroutine","transactions","transactionsCount","response","transactionsResponse","count","offset","accounts","item","concat","total_transactions","no_spread","refreshTransactions","getCreditDetails","getHoldings","getInvestmentTransactions","getLiabilities","createAssetReport","access_tokens","days_requested","filterAssetReport","asset_report_token","account_ids_to_exclude","refreshAssetReport","getAssetReport","include_insights","getAssetReportPdf","binary","createAuditCopy","auditor_id","getAuditCopy","audit_copy_token","removeAuditCopy","removeAssetReport","createPaymentRecipient","name","iban","address","bacs","undefined","getPaymentRecipient","recipient_id","listPaymentRecipients","createPayment","reference","amount","createPaymentToken","payment_id","getPayment","listPayments","getDepositSwitch","deposit_switch_id","createDepositSwitch","target_account_id","target_access_token","createDepositSwitchToken","getInstitutions","country_codes","getInstitutionById","institution_id","searchInstitutionsByName","query","getCategories","resetLogin","getWebhookVerificationKey","key_id","sandboxPublicTokenCreate","initial_products","sandboxItemFireWebhook","webhook_code","sandboxItemSetVerificationStatus","verification_status","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar P = require('bluebird');\nvar R = require('ramda');\n\nvar plaidEnvironments = require('./plaidEnvironments');\nvar plaidRequest = require('./plaidRequest');\nvar wrapPromise = require('./wrapPromise');\n\n// Default version of Plaid API, if not specified by the client.\nconst DEFAULT_VERSION = '2020-09-14';\n\n// Client(String, String, String, String, Object?)\nfunction Client(configs) {\n  if (!R.is(Object, configs)) {\n    throw new Error('Unexpected parameter type. ' +\n    'Refer to https://github.com/plaid/plaid-node ' +\n    'for how to create a Plaid client.');\n  }\n\n  if (R.isNil(configs.clientID)) {\n    throw new Error('Missing Plaid \"clientID\"');\n  }\n\n  if (R.isNil(configs.secret)) {\n    throw new Error('Missing Plaid \"secret\"');\n  }\n\n  if (!R.any(R.equals(configs.env), R.values(plaidEnvironments))) {\n    throw new Error('Invalid Plaid environment');\n  }\n\n  if (arguments.length > 1) {\n    throw new Error('Too many arguments to constructor');\n  }\n\n  this.client_id = configs.clientID;\n  this.secret = configs.secret;\n  this.env = configs.env;\n\n  if (configs.options == null) {\n    configs.options = {};\n  }\n\n  if (configs.options.version == null) {\n    configs.options.version = DEFAULT_VERSION;\n  }\n\n  this.client_request_opts = configs.options;\n}\n\n// Private\nvar requestWithAccessToken = function(path) {\n  return function(access_token, options, cb) {\n    return this._authenticatedRequest({\n      path: path,\n      body: {\n        access_token: access_token,\n      }\n    }, options, cb);\n  };\n};\n\nClient.prototype._authenticatedRequest =\n  function _authenticatedRequest(requestSpec, options, cb) {\n    // juggle arguments\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    } else {\n      requestSpec.body.options = options;\n    }\n\n    var context = R.merge({env: this.env}, {\n      client_id: this.client_id,\n      secret: this.secret,\n    });\n\n    return plaidRequest(context, requestSpec, this.client_request_opts, cb);\n  };\n\n// createPublicToken(String, Object, Function)\nClient.prototype.createPublicToken = function(access_token, options, cb) {\n  const createPublicTokenRequest =\n  requestWithAccessToken('/item/public_token/create', false);\n  console.warn(`Warning: this method will be deprecated in a future version.\n  To replace the public_token for initializing Link,\n  look into the link_token at\n  https://plaid.com/docs/api/tokens/#linktokencreate`);\n  return createPublicTokenRequest.call(this, access_token, options, cb);\n};\n\nconst linkTokenConfigFields = [\n  'user',\n  'client_name',\n  'products',\n  'country_codes',\n  'language',\n  'webhook',\n  'access_token',\n  'link_customization_name',\n  'redirect_uri',\n  'android_package_name',\n  'account_filters',\n  'cross_app_item_add',\n  'payment_initiation',\n];\n\n// createLinkToken(CreateLinkTokenOptions, Function)\nClient.prototype.createLinkToken =\n  function(options, cb) {\n    const body = linkTokenConfigFields.reduce((body, field) => {\n      body[field] = options[field];\n      return body;\n    }, {});\n\n    return this._authenticatedRequest({\n      path: '/link/token/create',\n      body: body,\n    }, cb);\n  };\n\n// getLinkToken(CreateLinkTokenOptions, Function)\nClient.prototype.getLinkToken =\n  function(link_token, cb) {\n    return this._authenticatedRequest({\n      path: '/link/token/get',\n      body: { link_token },\n    }, cb);\n  };\n\n// exchangePublicToken(String, Function)\nClient.prototype.exchangePublicToken =\n  function(public_token, cb) {\n    return this._authenticatedRequest({\n      path: '/item/public_token/exchange',\n      body: {\n        public_token: public_token,\n      }\n    }, cb);\n  };\n\n// updateItemWebhook(String, String, Function)\nClient.prototype.updateItemWebhook =\n  function(access_token, webhook, cb) {\n    return this._authenticatedRequest({\n      path: '/item/webhook/update',\n      body: {\n        access_token: access_token,\n        webhook: webhook,\n      }\n    }, cb);\n  };\n\n// createProcessorToken(String, String, String, Function)\nClient.prototype.createProcessorToken =\n  function(access_token, account_id, processor, cb) {\n    var endpoint = '/processor/token/create';\n    const options = {\n      access_token,\n      account_id,\n      processor,\n    };\n\n    if (processor === 'stripe') {\n      endpoint = '/processor/stripe/bank_account_token/create';\n      delete options.processor;\n    } else if (processor === 'apex') {\n      endpoint = '/processor/apex/processor_token/create';\n      delete options.processor;\n    }\n\n    return this._authenticatedRequest({\n      path: endpoint,\n      body: options,\n    }, cb);\n  };\n\nClient.prototype.createStripeToken = function(access_token, account_id, cb) {\n  return this.createProcessorToken(access_token, account_id, 'stripe', cb);\n};\n\n// invalidateAccessToken(String, Function)\nClient.prototype.invalidateAccessToken =\n  requestWithAccessToken('/item/access_token/invalidate');\n\n// removeItem(String, Function)\nClient.prototype.removeItem =\n  requestWithAccessToken('/item/remove');\n\n// getItem(String, Function)\nClient.prototype.getItem =\n  requestWithAccessToken('/item/get');\n\n// importItem([String], Object, Object?, Function)\nClient.prototype.importItem =\n  function(products, user_auth, options, cb) {\n    return this._authenticatedRequest({\n      path: '/item/import',\n      body: {\n        products: products,\n        user_auth: user_auth,\n      }\n    }, options, cb);\n  };\n\n// getAccounts(String, Object?, Function)\nClient.prototype.getAccounts =\n  requestWithAccessToken('/accounts/get');\n\n// getBalance(String, Object?, Function)\nClient.prototype.getBalance =\n  requestWithAccessToken('/accounts/balance/get');\n\n// getAuth(String, Object?, Function)\nClient.prototype.getAuth =\n  requestWithAccessToken('/auth/get');\n\n// getIncome(String, Function)\n// getIdentity(String, Function)\nClient.prototype.getIdentity =\n  requestWithAccessToken('/identity/get');\n\n// getIncome(String, Function)\nClient.prototype.getIncome =\n  requestWithAccessToken('/income/get');\n\n// getTransactions(String, Date, Date, Object?, Function)\nClient.prototype.getTransactions =\n  function(access_token, start_date, end_date, options, cb) {\n    return this._authenticatedRequest({\n      path: '/transactions/get',\n      body: {\n        access_token: access_token,\n        start_date: start_date,\n        end_date: end_date,\n      },\n    }, options, cb);\n  };\n\n// getAllTransactions(String, Date, Date, Object?, Function)\nClient.prototype.getAllTransactions =\n  function(access_token, start_date, end_date, options, cb) {\n    // juggle arguments\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    } else {\n      options = R.defaultTo({}, options);\n    }\n\n    var self = this;\n\n    return wrapPromise(P.coroutine(function*() {\n      var transactions = [];\n      var transactionsCount = 0;\n      var response = {};\n      while (true) {\n        const transactionsResponse = yield self.getTransactions(\n          access_token,\n          start_date,\n          end_date,\n          R.merge(options, {\n            count: 500, // largest allowed value\n            offset: transactions.length,\n          })\n        );\n\n        response.accounts = transactionsResponse.accounts;\n        response.item  = transactionsResponse.item;\n\n        if (transactionsResponse.transactions != null) {\n          transactions = R.concat(\n            transactions, transactionsResponse.transactions);\n          transactionsCount += transactionsResponse.transactions.length;\n        }\n\n        if (transactionsCount >= transactionsResponse.total_transactions) {\n          break;\n        }\n      }\n\n      response.total_transactions = transactionsCount;\n      response.transactions = transactions;\n\n      return response;\n    })(), cb, {no_spread: true});\n  };\n\n// transactionsRefresh(String, Function)\nClient.prototype.refreshTransactions =\n  requestWithAccessToken('/transactions/refresh');\n\n// getCreditDetails(String, Function)\nClient.prototype.getCreditDetails =\n  requestWithAccessToken('/credit_details/get');\n\n// getHoldings(String, Function)\nClient.prototype.getHoldings =\n  requestWithAccessToken('/investments/holdings/get');\n\n// getInvestmentTransactions(String, Date, Date, Object?, Function)\nClient.prototype.getInvestmentTransactions =\n  function(access_token, start_date, end_date, options, cb) {\n    return this._authenticatedRequest({\n      path: '/investments/transactions/get',\n      body: {\n        access_token: access_token,\n        start_date: start_date,\n        end_date: end_date,\n      },\n    }, options, cb);\n  };\n\n// getLiabilities(String, Function)\nClient.prototype.getLiabilities = requestWithAccessToken('/liabilities/get');\n\n// createAssetReport([String], Number, Object, Function)\nClient.prototype.createAssetReport =\n  function(access_tokens, days_requested, options, cb) {\n    return this._authenticatedRequest({\n      path: '/asset_report/create',\n      body: {\n        access_tokens: access_tokens,\n        days_requested: days_requested,\n      },\n    }, options, cb);\n  };\n\n// filterAssetReport(String, [String], Function)\nClient.prototype.filterAssetReport =\n  function(asset_report_token, account_ids_to_exclude, cb) {\n    return this._authenticatedRequest({\n      path: '/asset_report/filter',\n      body: {\n        asset_report_token: asset_report_token,\n        account_ids_to_exclude: account_ids_to_exclude,\n      },\n    }, cb);\n  };\n\n// refreshAssetReport(String, Number, Object?, Function)\nClient.prototype.refreshAssetReport =\n  function(asset_report_token, days_requested, options, cb) {\n    return this._authenticatedRequest({\n      path: '/asset_report/refresh',\n      body: {\n        asset_report_token: asset_report_token,\n        days_requested: days_requested,\n      },\n    }, options, cb);\n  };\n\n\n// getAssetReport(String, Boolean, Function)\nClient.prototype.getAssetReport =\n  function(asset_report_token, include_insights, cb) {\n    return this._authenticatedRequest({\n      path: '/asset_report/get',\n      body: {\n        asset_report_token: asset_report_token,\n        include_insights: include_insights,\n      },\n    }, cb);\n  };\n\n// getAssetReportPdf(String, Function)\nClient.prototype.getAssetReportPdf =\nfunction(asset_report_token, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/pdf/get',\n    body: {\n      asset_report_token: asset_report_token,\n    },\n    binary: true,\n  }, cb);\n};\n\n// createAuditCopy(String, String, Function)\nClient.prototype.createAuditCopy =\nfunction(asset_report_token, auditor_id, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/audit_copy/create',\n    body: {\n      asset_report_token: asset_report_token,\n      auditor_id: auditor_id,\n    },\n  }, cb);\n};\n\n// getAuditCopy(String, Function)\nClient.prototype.getAuditCopy =\n  function(audit_copy_token, cb) {\n    return this._authenticatedRequest({\n      path: '/asset_report/audit_copy/get',\n      body: {\n        audit_copy_token: audit_copy_token,\n      },\n    }, cb);\n  };\n\n// removeAuditCopy(String, Function)\nClient.prototype.removeAuditCopy =\nfunction(audit_copy_token, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/audit_copy/remove',\n    body: {\n      audit_copy_token: audit_copy_token,\n    },\n  }, cb);\n};\n\n// removeAssetReport(String, Function)\nClient.prototype.removeAssetReport =\nfunction(asset_report_token, cb) {\n  return this._authenticatedRequest({\n    path: '/asset_report/remove',\n    body: {\n      asset_report_token: asset_report_token,\n    },\n  }, cb);\n};\n\n// createPaymentRecipient(String, String, Object, Object, Function)\nClient.prototype.createPaymentRecipient =\n  function(name, iban, address, bacs, cb) {\n    return this._authenticatedRequest({\n      path: '/payment_initiation/recipient/create',\n      body: {\n        name: name,\n        iban: iban != null ? iban : undefined,\n        address: address,\n        bacs: bacs != null ? bacs : undefined,\n      },\n    }, cb);\n  };\n\n// getPaymentRecipient(String, Function)\nClient.prototype.getPaymentRecipient =\n  function(recipient_id, cb) {\n    return this._authenticatedRequest({\n      path: '/payment_initiation/recipient/get',\n      body: {recipient_id: recipient_id},\n    }, cb);\n  };\n\n// listPaymentRecipients(Function)\nClient.prototype.listPaymentRecipients =\n  function(cb) {\n    return this._authenticatedRequest({\n      path: '/payment_initiation/recipient/list',\n    }, cb);\n  };\n\n// createPayment(String, String, Object, Function)\nClient.prototype.createPayment =\n  function(recipient_id, reference, amount, cb) {\n    return this._authenticatedRequest({\n      path: '/payment_initiation/payment/create',\n      body: {\n        recipient_id: recipient_id,\n        reference: reference,\n        amount: amount,\n      },\n    }, cb);\n  };\n\n// createPaymentToken(String, Function)\nClient.prototype.createPaymentToken =\n  function(payment_id, cb) {\n    console.warn(`Warning: this method will be deprecated in a future version.\n    To replace the payment_token,\n    look into the link_token at\n    https://plaid.com/docs/api/tokens/#linktokencreate.`);\n\n    return this._authenticatedRequest({\n      path: '/payment_initiation/payment/token/create',\n      body: {\n        payment_id: payment_id,\n      },\n    }, cb);\n  };\n\n// getPayment(String, Function)\nClient.prototype.getPayment =\n  function(payment_id, cb) {\n    return this._authenticatedRequest({\n      path: '/payment_initiation/payment/get',\n      body: {payment_id: payment_id},\n    }, cb);\n  };\n\n// listPayments(Object, Function)\nClient.prototype.listPayments =\n  function(options, cb) {\n    return this._authenticatedRequest({\n      path: '/payment_initiation/payment/list',\n      body: options,\n    }, cb);\n  };\n\n// getDepositSwitch(String, Object?, Function)\nClient.prototype.getDepositSwitch =\n  function(deposit_switch_id, options, cb) {\n    return this._authenticatedRequest({\n      path: '/deposit_switch/get',\n      body: {\n        deposit_switch_id: deposit_switch_id,\n      },\n    }, options, cb);\n  };\n\n// createDepositSwitch(String, String, Object?, Function)\nClient.prototype.createDepositSwitch =\n  function(target_account_id, target_access_token, options, cb) {\n    return this._authenticatedRequest({\n      path: '/deposit_switch/create',\n      body: {\n        target_account_id: target_account_id,\n        target_access_token: target_access_token,\n      },\n    }, options, cb);\n  };\n\n// createDepositSwitchToken(String, Object?, Function)\nClient.prototype.createDepositSwitchToken =\n  function(deposit_switch_id, options, cb) {\n    return this._authenticatedRequest({\n      path: '/deposit_switch/token/create',\n      body: {\n        deposit_switch_id: deposit_switch_id,\n      },\n    }, options, cb);\n  };\n\n// getInstitutions(Number, Number, [String], Object?, Function);\nClient.prototype.getInstitutions =\n  function(count, offset, country_codes, options, cb) {\n    return this._authenticatedRequest({\n      path: '/institutions/get',\n      body: {\n        count: count,\n        offset: offset,\n        country_codes: country_codes\n      },\n    }, options, cb);\n  };\n\n// getInstitutionById(String, [String], Object?, Function);\nClient.prototype.getInstitutionById =\n  function(institution_id, country_codes, options, cb) {\n    return this._authenticatedRequest({\n      path: '/institutions/get_by_id',\n      body: {\n        institution_id: institution_id,\n        country_codes: country_codes\n      }\n    }, options, cb);\n  };\n\n// searchInstitutionsByName(String, [String], Object?, Function)\nClient.prototype.searchInstitutionsByName =\n function(query, products, country_codes, options, cb) {\n   return this._authenticatedRequest({\n     path: '/institutions/search',\n     body: {\n       query: query,\n       products: products,\n       country_codes: country_codes\n     }\n   }, options, cb);\n };\n\n// getCategories(Function)\nClient.prototype.getCategories =\n  function(cb) {\n    return plaidRequest({\n      env: this.env\n    }, {\n      path: '/categories/get'\n    }, this.client_request_opts, cb);\n  };\n\n// resetLogin(String, Function) - sandbox only\nClient.prototype.resetLogin =\n  requestWithAccessToken('/sandbox/item/reset_login');\n\n// getWebhookVerificationKey(String, Function)\nClient.prototype.getWebhookVerificationKey =\nfunction(key_id, cb) {\n  return this._authenticatedRequest({\n    path: '/webhook_verification_key/get',\n    body: {\n      key_id: key_id,\n    },\n  }, cb);\n};\n\n// sandboxPublicTokenCreate(String, Array, Object?, Function) - sandbox only\nClient.prototype.sandboxPublicTokenCreate =\nfunction(institution_id, initial_products, options, cb) {\n  return this._authenticatedRequest({\n    path: '/sandbox/public_token/create',\n    body: {\n      institution_id: institution_id,\n      initial_products: initial_products,\n    },\n  }, options, cb);\n};\n\n// sandboxItemFireWebhook(String, String, Function) - sandbox only\nClient.prototype.sandboxItemFireWebhook =\nfunction(access_token, webhook_code, cb) {\n  return this._authenticatedRequest({\n    path: '/sandbox/item/fire_webhook',\n    body: {\n      access_token: access_token,\n      webhook_code: webhook_code,\n    },\n  }, cb);\n};\n\n// sandboxItemSetVerificationStatus(String, String, String, Function)\n// - sandbox only\nClient.prototype.sandboxItemSetVerificationStatus =\nfunction(access_token, account_id, verification_status, cb) {\n  return this._authenticatedRequest({\n    path: '/sandbox/item/set_verification_status',\n    body: {\n      access_token: access_token,\n      account_id: account_id,\n      verification_status: verification_status,\n    },\n  }, cb);\n};\n\nmodule.exports = Client;\n"]},"metadata":{},"sourceType":"script"}