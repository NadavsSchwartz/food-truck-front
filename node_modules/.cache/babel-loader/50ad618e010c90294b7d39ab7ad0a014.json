{"ast":null,"code":"var _curry1 = require('./internal/_curry1');\n\nvar _dispatchable = require('./internal/_dispatchable');\n\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\n\nvar dropRepeatsWith = require('./dropRepeatsWith');\n\nvar equals = require('./equals');\n/**\n * Returns a new list without any consecutively repeating elements. `R.equals`\n * is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\n\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/dropRepeats.js"],"names":["_curry1","require","_dispatchable","_xdropRepeatsWith","dropRepeatsWith","equals","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,8BAAD,CAA/B;;AACA,IAAIG,eAAe,GAAGH,OAAO,CAAC,mBAAD,CAA7B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAApB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAK,MAAM,CAACC,OAAP,GAAiBP,OAAO,CAACE,aAAa,CAAC,EAAD,EAAKC,iBAAiB,CAACE,MAAD,CAAtB,EAAgCD,eAAe,CAACC,MAAD,CAA/C,CAAd,CAAxB","sourcesContent":["var _curry1 = require('./internal/_curry1');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar dropRepeatsWith = require('./dropRepeatsWith');\nvar equals = require('./equals');\n\n\n/**\n * Returns a new list without any consecutively repeating elements. `R.equals`\n * is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n"]},"metadata":{},"sourceType":"script"}