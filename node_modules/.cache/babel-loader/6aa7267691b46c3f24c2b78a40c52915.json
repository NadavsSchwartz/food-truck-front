{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/NavBar\";\nimport NewFoodtruck from \"./components/NewFoodtruck\";\nimport Delete from \"./components/Delete\";\nimport Login from \"./components/sessions/Login\";\nimport Home from \"./containers/Home\";\nimport Signup from \"./components/sessions/Signup\";\nimport { connect } from \"react-redux\";\nimport { getCurrentAccount } from \"./actions/currentAccount\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport FoodtruckCard from \"./components/FoodtruckCard\";\nimport { createFoodtruck, getAllFoodtrucks, updateFoodtruck, removeFoodtruck } from \"./actions/foodTruck\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentAccount();\n    this.props.getAllFoodtrucks();\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Home, {\n            account: this.props.currentAccount,\n            alltrucks: this.props.allFoodtrucks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          render: ({\n            history\n          }) => /*#__PURE__*/_jsxDEV(Signup, {\n            history: history\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/accounts/:id/foodtrucks/new\",\n          render: props => /*#__PURE__*/_jsxDEV(NewFoodtruck, {\n            onSubmit: this.props.createFoodtruck,\n            ...props,\n            account_id: this.props.currentAccount,\n            buttonText: \"Create A Foodtruck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/accounts/:id/foodtrucks/:id\",\n          render: props => {\n            const foodtruckId = this.props.match.params.id; // const foodTruck = this.props.allFoodtrucks.find(\n            //   (foodTruck) => foodTruck.id == foodtruckId\n            // );\n\n            return /*#__PURE__*/_jsxDEV(FoodtruckCard, {\n              truck_id: foodtruckId,\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 22\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/accounts/:id/foodtrucks/:id/edit\",\n          render: props => {\n            const foodtruckId = this.props.match.params.id;\n            const foodTruck = this.props.allFoodtrucks.find(foodTruck => foodTruck.id == foodtruckId);\n            return /*#__PURE__*/_jsxDEV(NewFoodtruck, {\n              onSubmit: this.props.updateFoodtruck,\n              foodtruck: foodTruck,\n              account_id: this.props.currentAccount,\n              ...props,\n              buttonText: \"Update Foodtruck\",\n              ftId: props.match.params.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/accounts/:id/foodtrucks/:id/delete\",\n          render: props => {\n            return /*#__PURE__*/_jsxDEV(Delete, { ...props,\n              delete: this.props.removeFoodtruck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 22\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allFoodtrucks: state.foodtruckReducer.allFoodtrucks,\n    currentAccount: state.currentAccount\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getCurrentAccount,\n  getAllFoodtrucks,\n  createFoodtruck,\n  updateFoodtruck,\n  removeFoodtruck\n})(App));","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/App.js"],"names":["React","Component","Navbar","NewFoodtruck","Delete","Login","Home","Signup","connect","getCurrentAccount","Route","Switch","withRouter","Redirect","FoodtruckCard","createFoodtruck","getAllFoodtrucks","updateFoodtruck","removeFoodtruck","App","componentDidMount","props","render","currentAccount","allFoodtrucks","history","foodtruckId","match","params","id","foodTruck","find","mapStateToProps","state","foodtruckReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./components/NavBar\";\nimport NewFoodtruck from \"./components/NewFoodtruck\";\nimport Delete from \"./components/Delete\";\nimport Login from \"./components/sessions/Login\";\nimport Home from \"./containers/Home\";\nimport Signup from \"./components/sessions/Signup\";\nimport { connect } from \"react-redux\";\nimport { getCurrentAccount } from \"./actions/currentAccount\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport FoodtruckCard from \"./components/FoodtruckCard\";\n\nimport {\n  createFoodtruck,\n  getAllFoodtrucks,\n  updateFoodtruck,\n  removeFoodtruck,\n} from \"./actions/foodTruck\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentAccount();\n    this.props.getAllFoodtrucks();\n  }\n\n  render() {\n    debugger;\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Home\n                account={this.props.currentAccount}\n                alltrucks={this.props.allFoodtrucks}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={({ history }) => <Signup history={history} />}\n          />\n          <Route\n            exact\n            path=\"/accounts/:id/foodtrucks/new\"\n            render={(props) => (\n              <NewFoodtruck\n                onSubmit={this.props.createFoodtruck}\n                {...props}\n                account_id={this.props.currentAccount}\n                buttonText=\"Create A Foodtruck\"\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/accounts/:id/foodtrucks/:id\"\n            render={(props) => {\n              const foodtruckId = this.props.match.params.id;\n              // const foodTruck = this.props.allFoodtrucks.find(\n              //   (foodTruck) => foodTruck.id == foodtruckId\n              // );\n              return <FoodtruckCard truck_id={foodtruckId} {...props} />;\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/accounts/:id/foodtrucks/:id/edit\"\n            render={(props) => {\n              const foodtruckId = this.props.match.params.id;\n              const foodTruck = this.props.allFoodtrucks.find(\n                (foodTruck) => foodTruck.id == foodtruckId\n              );\n              return (\n                <NewFoodtruck\n                  onSubmit={this.props.updateFoodtruck}\n                  foodtruck={foodTruck}\n                  account_id={this.props.currentAccount}\n                  {...props}\n                  buttonText=\"Update Foodtruck\"\n                  ftId={props.match.params.id}\n                />\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/accounts/:id/foodtrucks/:id/delete\"\n            render={(props) => {\n              return <Delete {...props} delete={this.props.removeFoodtruck} />;\n            }}\n          />\n          {/* <Redirect to=\"/no-match\" /> */}\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    allFoodtrucks: state.foodtruckReducer.allFoodtrucks,\n    currentAccount: state.currentAccount,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getCurrentAccount,\n    getAllFoodtrucks,\n    createFoodtruck,\n    updateFoodtruck,\n    removeFoodtruck,\n  })(App)\n);\n"]},"metadata":{},"sourceType":"module"}