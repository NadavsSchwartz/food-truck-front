{"ast":null,"code":"import { addFoodtruck, setAllFoodtrucks, fetchFoodtruck } from \"../reducers/foodtruckReducer\";\nimport { updateFoodtruckForm, resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = accountId => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setAllFoodtrucks(response));\n      }\n    }).catch(console.log);\n  };\n};\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }.then(res => res.json()).then(response => {\n      debugger;\n\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(fetchFoodtruck(response));\n      }\n    }).catch(console.log);\n  };\n};\nexport const updateFoodtruck = (foodtruckData, accountId, foodtruckId) => {\n  return dispatch => {\n    const sendableFoodtruckData = {\n      name: foodtruckData.name,\n      location: foodtruckData.location,\n      category: foodtruckData.category,\n      hours: foodtruckData.hours,\n      score: foodtruckData.score,\n      description: foodtruckData.description,\n      accountId: foodtruckData.accountId\n    };\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`), {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableFoodtruckData)\n    }.then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(updateFoodtruck(response.data));\n        dispatch(updateFoodtruckForm());\n      }\n    }).catch(console.log);\n  };\n};\nexport const createFoodtruck = (foodData, accountId) => {\n  const foodtruckData = {\n    food_truck: foodData\n  };\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`;\n  return dispatch => {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(resp => resp.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(addFoodtruck(resp));\n        dispatch(resetFoodtruckForm());\n        alert(\"New Foodtruck Added successfully successfuly.\");\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/foodTruck.js"],"names":["addFoodtruck","setAllFoodtrucks","fetchFoodtruck","updateFoodtruckForm","resetFoodtruckForm","getAllFoodtrucks","accountId","dispatch","getState","console","log","fetch","method","headers","then","res","json","response","error","alert","catch","getFoodtruck","foodtruckId","updateFoodtruck","foodtruckData","sendableFoodtruckData","name","location","category","hours","score","description","body","JSON","stringify","data","createFoodtruck","foodData","food_truck","url","resp"],"mappings":"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","sourcesContent":["import {\n  addFoodtruck,\n  setAllFoodtrucks,\n  fetchFoodtruck,\n} from \"../reducers/foodtruckReducer\";\nimport {\n  updateFoodtruckForm,\n  resetFoodtruckForm,\n} from \"./handleNewFoodtruckForm\";\n\nexport const getAllFoodtrucks = (accountId) => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(\n      `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setAllFoodtrucks(response));\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return (dispatch) => {\n    return (\n      fetch(\n        `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n      ),\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n        .then((res) => res.json())\n        .then((response) => {\n          debugger;\n          if (response.error) {\n            alert(response.error);\n          } else {\n            dispatch(fetchFoodtruck(response));\n          }\n        })\n        .catch(console.log)\n    );\n  };\n};\n\nexport const updateFoodtruck = (foodtruckData, accountId, foodtruckId) => {\n  return (dispatch) => {\n    const sendableFoodtruckData = {\n      name: foodtruckData.name,\n      location: foodtruckData.location,\n      category: foodtruckData.category,\n      hours: foodtruckData.hours,\n      score: foodtruckData.score,\n      description: foodtruckData.description,\n      accountId: foodtruckData.accountId,\n    };\n    return (\n      fetch(\n        `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n      ),\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(sendableFoodtruckData),\n      }\n\n        .then((res) => res.json())\n        .then((response) => {\n          if (response.error) {\n            alert(response.error);\n          } else {\n            dispatch(updateFoodtruck(response.data));\n            dispatch(updateFoodtruckForm());\n          }\n        })\n        .catch(console.log)\n    );\n  };\n};\n\nexport const createFoodtruck = (foodData, accountId) => {\n  const foodtruckData = {\n    food_truck: foodData,\n  };\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`;\n  return (dispatch) => {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        if (resp.error) {\n          alert(resp.error);\n        } else {\n          dispatch(addFoodtruck(resp));\n          dispatch(resetFoodtruckForm());\n          alert(\"New Foodtruck Added successfully successfuly.\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}