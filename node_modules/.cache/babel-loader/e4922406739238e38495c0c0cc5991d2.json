{"ast":null,"code":"import { addFoodtruck, setAllFoodtrucks, fetchFoodtruck, deleteFoodtruck, updateFoodtruckData } from \"../reducers/foodtruckReducer\";\nimport { resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = account_id => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/foodtrucks/${ad}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"account_id\": `${account_id}`\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setAllFoodtrucks(response));\n      }\n    });\n  };\n}; // export const getFoodtruck = (accountId, foodtruckId) => {\n//   return (dispatch) => {\n//     return (\n//       fetch(\n//         `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n//       ),\n//       {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       }\n//         .then((res) => res.json())\n//         .then((response) => {\n//           debugger;\n//           if (response.error) {\n//             alert(response.error);\n//           } else {\n//             dispatch(fetchFoodtruck(response));\n//           }\n//         })\n//         .catch(console.log)\n//     );\n//   };\n// };\n\nexport const updateFoodtruck = (foodData, accountId, foodtruckId, history) => {\n  return dispatch => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    const foodtruckData = {\n      food_truck: foodData\n    };\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(updateFoodtruckData(response));\n        dispatch(resetFoodtruckForm());\n        alert(\"Foodtruck data updated!\");\n        history.push(`/accounts/${accountId}/foodtrucks/${foodtruckId}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const createFoodtruck = (foodData, accountId, history) => {\n  return dispatch => {\n    const foodtruckData = {\n      food_truck: foodData\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(addFoodtruck(response));\n        dispatch(resetFoodtruckForm());\n        alert(\"New Foodtruck Added successfuly.\");\n        history.push(`/accounts/${accountId}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const removeFoodtruck = (foodtruckId, {\n  accountId\n}, history) => {\n  return dispatch => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(deleteFoodtruck(response));\n        alert(\"Foodtruck deleted successfully.\");\n        history.push(`/`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/foodTruck.js"],"names":["addFoodtruck","setAllFoodtrucks","fetchFoodtruck","deleteFoodtruck","updateFoodtruckData","resetFoodtruckForm","getAllFoodtrucks","account_id","dispatch","fetch","ad","method","headers","then","res","json","response","error","alert","updateFoodtruck","foodData","accountId","foodtruckId","history","url","foodtruckData","food_truck","body","JSON","stringify","push","catch","console","log","createFoodtruck","removeFoodtruck"],"mappings":"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","sourcesContent":["import {\n  addFoodtruck,\n  setAllFoodtrucks,\n  fetchFoodtruck,\n  deleteFoodtruck,\n  updateFoodtruckData,\n} from \"../reducers/foodtruckReducer\";\nimport { resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = (account_id) => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/foodtrucks/${ad}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"account_id\": `${account_id}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setAllFoodtrucks(response));\n        }\n      });\n  };\n};\n\n// export const getFoodtruck = (accountId, foodtruckId) => {\n//   return (dispatch) => {\n//     return (\n//       fetch(\n//         `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n//       ),\n//       {\n//         method: \"GET\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       }\n//         .then((res) => res.json())\n//         .then((response) => {\n//           debugger;\n//           if (response.error) {\n//             alert(response.error);\n//           } else {\n//             dispatch(fetchFoodtruck(response));\n//           }\n//         })\n//         .catch(console.log)\n//     );\n//   };\n// };\n\nexport const updateFoodtruck = (foodData, accountId, foodtruckId, history) => {\n  return (dispatch) => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    const foodtruckData = {\n      food_truck: foodData,\n    };\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(updateFoodtruckData(response));\n          dispatch(resetFoodtruckForm());\n          alert(\"Foodtruck data updated!\");\n          history.push(`/accounts/${accountId}/foodtrucks/${foodtruckId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const createFoodtruck = (foodData, accountId, history) => {\n  return (dispatch) => {\n    const foodtruckData = {\n      food_truck: foodData,\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(addFoodtruck(response));\n          dispatch(resetFoodtruckForm());\n\n          alert(\"New Foodtruck Added successfuly.\");\n          history.push(`/accounts/${accountId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const removeFoodtruck = (foodtruckId, { accountId }, history) => {\n  return (dispatch) => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(deleteFoodtruck(response));\n          alert(\"Foodtruck deleted successfully.\");\n          history.push(`/`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}