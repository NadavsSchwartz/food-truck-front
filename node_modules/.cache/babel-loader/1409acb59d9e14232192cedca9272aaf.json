{"ast":null,"code":"var _curry1 = require('./internal/_curry1');\n\nvar keys = require('./keys');\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\n\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/invertObj.js"],"names":["_curry1","require","keys","module","exports","invertObj","obj","props","len","length","idx","out","key"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiBJ,OAAO,CAAC,SAASK,SAAT,CAAmBC,GAAnB,EAAwB;AAC/C,MAAIC,KAAK,GAAGL,IAAI,CAACI,GAAD,CAAhB;AACA,MAAIE,GAAG,GAAGD,KAAK,CAACE,MAAhB;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,EAAV;;AAEA,SAAOD,GAAG,GAAGF,GAAb,EAAkB;AAChB,QAAII,GAAG,GAAGL,KAAK,CAACG,GAAD,CAAf;AACAC,IAAAA,GAAG,CAACL,GAAG,CAACM,GAAD,CAAJ,CAAH,GAAgBA,GAAhB;AACAF,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOC,GAAP;AACD,CAZuB,CAAxB","sourcesContent":["var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\n"]},"metadata":{},"sourceType":"script"}