{"ast":null,"code":"var _curry1 = require('./internal/_curry1');\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\n\nmodule.exports = function () {\n  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n  var zeroWidth = '\\u200b';\n  var hasProtoTrim = typeof String.prototype.trim === 'function';\n\n  if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}();","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/trim.js"],"names":["_curry1","require","module","exports","ws","zeroWidth","hasProtoTrim","String","prototype","trim","str","beginRx","RegExp","endRx","replace"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAkB,YAAW;AAC3B,MAAIC,EAAE,GAAG,qEACA,oEADA,GAEA,cAFT;AAGA,MAAIC,SAAS,GAAG,QAAhB;AACA,MAAIC,YAAY,GAAI,OAAOC,MAAM,CAACC,SAAP,CAAiBC,IAAxB,KAAiC,UAArD;;AACA,MAAI,CAACH,YAAD,IAAkBF,EAAE,CAACK,IAAH,MAAa,CAACJ,SAAS,CAACI,IAAV,EAApC,EAAuD;AACrD,WAAOT,OAAO,CAAC,SAASS,IAAT,CAAcC,GAAd,EAAmB;AAChC,UAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,OAAOR,EAAP,GAAY,IAAZ,GAAmBA,EAAnB,GAAwB,IAAnC,CAAd;AACA,UAAIS,KAAK,GAAG,IAAID,MAAJ,CAAW,MAAMR,EAAN,GAAW,IAAX,GAAkBA,EAAlB,GAAuB,KAAlC,CAAZ;AACA,aAAOM,GAAG,CAACI,OAAJ,CAAYH,OAAZ,EAAqB,EAArB,EAAyBG,OAAzB,CAAiCD,KAAjC,EAAwC,EAAxC,CAAP;AACD,KAJa,CAAd;AAKD,GAND,MAMO;AACL,WAAOb,OAAO,CAAC,SAASS,IAAT,CAAcC,GAAd,EAAmB;AAChC,aAAOA,GAAG,CAACD,IAAJ,EAAP;AACD,KAFa,CAAd;AAGD;AACF,CAjBiB,EAAlB","sourcesContent":["var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nmodule.exports = (function() {\n  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n           '\\u2029\\uFEFF';\n  var zeroWidth = '\\u200b';\n  var hasProtoTrim = (typeof String.prototype.trim === 'function');\n  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}());\n"]},"metadata":{},"sourceType":"script"}