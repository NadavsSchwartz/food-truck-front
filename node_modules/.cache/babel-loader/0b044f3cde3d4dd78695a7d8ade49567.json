{"ast":null,"code":"var _curry2 = require('./internal/_curry2');\n\nvar _isNumber = require('./internal/_isNumber');\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\n\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/range.js"],"names":["_curry2","require","_isNumber","module","exports","range","from","to","TypeError","result","n","push"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,sBAAD,CAAvB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiBJ,OAAO,CAAC,SAASK,KAAT,CAAeC,IAAf,EAAqBC,EAArB,EAAyB;AAChD,MAAI,EAAEL,SAAS,CAACI,IAAD,CAAT,IAAmBJ,SAAS,CAACK,EAAD,CAA9B,CAAJ,EAAyC;AACvC,UAAM,IAAIC,SAAJ,CAAc,yCAAd,CAAN;AACD;;AACD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,CAAC,GAAGJ,IAAR;;AACA,SAAOI,CAAC,GAAGH,EAAX,EAAe;AACbE,IAAAA,MAAM,CAACE,IAAP,CAAYD,CAAZ;AACAA,IAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAOD,MAAP;AACD,CAXuB,CAAxB","sourcesContent":["var _curry2 = require('./internal/_curry2');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\n"]},"metadata":{},"sourceType":"script"}