{"ast":null,"code":"import { clearFoodtrucks } from \"../reducers/foodtruckReducer\";\nimport { getAllFoodtrucks } from \"./foodTruck\";\nimport { resetLoginForm } from \"./handleLoginForm\";\nimport { resetSignupForm } from \"./handleSignupForm\";\nexport const setCurrentAccount = account => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    action: account\n  };\n};\nexport const clearCurrentAccount = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\"\n  };\n};\nexport const login = (credentials, history) => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentAccount(response.account));\n        dispatch(getAllFoodtrucks(response.account.id));\n        dispatch(resetLoginForm());\n        alert(\"You have logged in successfully.\");\n        history.push(\"/\");\n      }\n    }).catch(console.log);\n  };\n};\nexport const signup = (credentials, history) => {\n  return dispatch => {\n    const accountInfo = {\n      account: credentials\n    };\n    return fetch(\"http://localhost:3000/api/v1/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(accountInfo)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentAccount(response.account));\n        dispatch(resetSignupForm());\n        alert(\"account created successfuly.\");\n        history.push(\"/login\");\n      }\n    }).catch(console.log);\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch(clearCurrentAccount());\n    dispatch(clearFoodtrucks());\n    return fetch(\"http://localhost:3000/api/v1/logout\", {\n      method: \"DELETE\"\n    });\n  };\n};\nexport const getCurrentAccount = () => {\n  return (dispatch, getState) => {\n    return fetch(\"http://localhost:3000/api/v1/get_current_account\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        console.log(response.account);\n        dispatch(getAllFoodtrucks(response.account.id));\n\n        if (response.loggedIn && getState().currentAccount.loggedIn === false) {\n          dispatch(setCurrentAccount(response.account));\n          dispatch(getAllFoodtrucks(response.account.id));\n        }\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/currentAccount.js"],"names":["clearFoodtrucks","getAllFoodtrucks","resetLoginForm","resetSignupForm","setCurrentAccount","account","type","action","clearCurrentAccount","login","credentials","history","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","response","error","alert","id","push","catch","console","log","signup","accountInfo","logout","getCurrentAccount","getState","loggedIn","currentAccount"],"mappings":"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","sourcesContent":["import { clearFoodtrucks } from \"../reducers/foodtruckReducer\";\nimport { getAllFoodtrucks } from \"./foodTruck\";\nimport { resetLoginForm } from \"./handleLoginForm\";\nimport { resetSignupForm } from \"./handleSignupForm\";\n\nexport const setCurrentAccount = (account) => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    action: account,\n  };\n};\n\nexport const clearCurrentAccount = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\",\n  };\n};\n\nexport const login = (credentials, history) => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setCurrentAccount(response.account));\n          dispatch(getAllFoodtrucks(response.account.id));\n\n          dispatch(resetLoginForm());\n\n          alert(\"You have logged in successfully.\");\n          history.push(\"/\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const signup = (credentials, history) => {\n  return (dispatch) => {\n    const accountInfo = {\n      account: credentials,\n    };\n    return fetch(\"http://localhost:3000/api/v1/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(accountInfo),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setCurrentAccount(response.account));\n          dispatch(resetSignupForm());\n          alert(\"account created successfuly.\");\n          history.push(\"/login\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    dispatch(clearCurrentAccount());\n    dispatch(clearFoodtrucks());\n    return fetch(\"http://localhost:3000/api/v1/logout\", {\n      method: \"DELETE\",\n    });\n  };\n};\n\nexport const getCurrentAccount = () => {\n  return (dispatch, getState) => {\n    return fetch(\"http://localhost:3000/api/v1/get_current_account\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          console.log(response.account);\n          dispatch(getAllFoodtrucks(response.account.id));\n\n          if (\n            response.loggedIn &&\n            getState().currentAccount.loggedIn === false\n          ) {\n            dispatch(setCurrentAccount(response.account));\n            dispatch(getAllFoodtrucks(response.account.id));\n          }\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}