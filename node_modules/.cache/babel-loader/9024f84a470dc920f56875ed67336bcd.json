{"ast":null,"code":"var _curry1 = require('./internal/_curry1');\n\nvar _isArguments = require('./internal/_isArguments');\n\nvar _isArray = require('./internal/_isArray');\n\nvar _isObject = require('./internal/_isObject');\n\nvar _isString = require('./internal/_isString');\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\n\nmodule.exports = _curry1(function empty(x) {\n  return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : // else\n  void 0;\n});","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/empty.js"],"names":["_curry1","require","_isArguments","_isArray","_isObject","_isString","module","exports","empty","x","constructor","arguments"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,qBAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,sBAAD,CAAvB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,sBAAD,CAAvB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAK,MAAM,CAACC,OAAP,GAAiBP,OAAO,CAAC,SAASQ,KAAT,CAAeC,CAAf,EAAkB;AACzC,SACGA,CAAC,IAAI,IAAL,IAAa,OAAOA,CAAC,CAACD,KAAT,KAAmB,UAAjC,GACEC,CAAC,CAACD,KAAF,EADF,GAECC,CAAC,IAAI,IAAL,IAAaA,CAAC,CAACC,WAAF,IAAiB,IAA9B,IAAsC,OAAOD,CAAC,CAACC,WAAF,CAAcF,KAArB,KAA+B,UAAtE,GACEC,CAAC,CAACC,WAAF,CAAcF,KAAd,EADF,GAEAL,QAAQ,CAACM,CAAD,CAAR,GACE,EADF,GAEAJ,SAAS,CAACI,CAAD,CAAT,GACE,EADF,GAEAL,SAAS,CAACK,CAAD,CAAT,GACE,EADF,GAEAP,YAAY,CAACO,CAAD,CAAZ,GACG,YAAW;AAAE,WAAOE,SAAP;AAAmB,GAAhC,EADH,GAEA;AACE,OAAK,CAdT;AAgBD,CAjBuB,CAAxB","sourcesContent":["var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n"]},"metadata":{},"sourceType":"script"}