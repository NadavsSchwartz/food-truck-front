{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/NavBar\";\nimport NewFoodtruck from \"./components/NewFoodtruck\";\nimport Delete from \"./components/Delete\";\nimport Login from \"./components/sessions/Login\";\nimport Home from \"./containers/Home\";\nimport Signup from \"./components/sessions/Signup\";\nimport { connect } from \"react-redux\";\nimport { getCurrentAccount } from \"./actions/currentAccount\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport FoodtruckCard from \"./components/FoodtruckCard\";\nimport { createFoodtruck, getAllFoodtrucks, updateFoodtruck, removeFoodtruck } from \"./actions/foodTruck\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentAccount();\n    this.props.getAllFoodtrucks();\n  }\n\n  render() {\n    debugger;\n\n    if (this.props && this.props.allFoodtrucks) {\n      const account = this.props.currentAccount.account.action;\n      const alltrucks = this.props.allFoodtrucks;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(Home, {\n              account: account,\n              alltrucks: alltrucks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            render: ({\n              history\n            }) => /*#__PURE__*/_jsxDEV(Signup, {\n              history: history\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/accounts/:id/foodtrucks/new\",\n            render: props => /*#__PURE__*/_jsxDEV(NewFoodtruck, {\n              onSubmit: this.props.createFoodtruck,\n              ...props,\n              account_id: account,\n              buttonText: \"Create A Foodtruck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/accounts/:id/foodtrucks/:id\",\n            render: props => {\n              const foodtruckId = this.props.match.params.id; // const foodTruck = this.props.allFoodtrucks.find(\n              //   (foodTruck) => foodTruck.id == foodtruckId\n              // );\n\n              return /*#__PURE__*/_jsxDEV(FoodtruckCard, {\n                truck_id: foodtruckId,\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 24\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/accounts/:id/foodtrucks/:id/edit\",\n            render: props => {\n              const foodtruckId = this.props.match.params.id;\n              const foodTruck = this.props.allFoodtrucks.find(foodTruck => foodTruck.id == foodtruckId);\n              return /*#__PURE__*/_jsxDEV(NewFoodtruck, {\n                onSubmit: this.props.updateFoodtruck,\n                foodtruck: foodTruck,\n                account_id: account,\n                ...props,\n                buttonText: \"Update Foodtruck\",\n                ftId: props.match.params.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/accounts/:id/foodtrucks/:id/delete\",\n            render: props => {\n              return /*#__PURE__*/_jsxDEV(Delete, { ...props,\n                delete: this.props.removeFoodtruck\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allFoodtrucks: state.foodtruckReducer.allFoodtrucks,\n    currentAccount: state.currentAccount\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getCurrentAccount,\n  getAllFoodtrucks,\n  createFoodtruck,\n  updateFoodtruck,\n  removeFoodtruck\n})(App));","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/App.js"],"names":["React","Component","Navbar","NewFoodtruck","Delete","Login","Home","Signup","connect","getCurrentAccount","Route","Switch","withRouter","Redirect","FoodtruckCard","createFoodtruck","getAllFoodtrucks","updateFoodtruck","removeFoodtruck","App","componentDidMount","props","render","allFoodtrucks","account","currentAccount","action","alltrucks","history","foodtruckId","match","params","id","foodTruck","find","mapStateToProps","state","foodtruckReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./components/NavBar\";\nimport NewFoodtruck from \"./components/NewFoodtruck\";\nimport Delete from \"./components/Delete\";\nimport Login from \"./components/sessions/Login\";\nimport Home from \"./containers/Home\";\nimport Signup from \"./components/sessions/Signup\";\nimport { connect } from \"react-redux\";\nimport { getCurrentAccount } from \"./actions/currentAccount\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\nimport FoodtruckCard from \"./components/FoodtruckCard\";\n\nimport {\n  createFoodtruck,\n  getAllFoodtrucks,\n  updateFoodtruck,\n  removeFoodtruck,\n} from \"./actions/foodTruck\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentAccount();\n    this.props.getAllFoodtrucks();\n  }\n\n  render() {\n    debugger;\n    if (this.props && this.props.allFoodtrucks) {\n      const account = this.props.currentAccount.account.action;\n      const alltrucks = this.props.allFoodtrucks;\n\n      return (\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route\n              exact\n              path=\"/\"\n              render={() => <Home account={account} alltrucks={alltrucks} />}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={({ history }) => <Signup history={history} />}\n            />\n            <Route\n              exact\n              path=\"/accounts/:id/foodtrucks/new\"\n              render={(props) => (\n                <NewFoodtruck\n                  onSubmit={this.props.createFoodtruck}\n                  {...props}\n                  account_id={account}\n                  buttonText=\"Create A Foodtruck\"\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/accounts/:id/foodtrucks/:id\"\n              render={(props) => {\n                const foodtruckId = this.props.match.params.id;\n                // const foodTruck = this.props.allFoodtrucks.find(\n                //   (foodTruck) => foodTruck.id == foodtruckId\n                // );\n                return <FoodtruckCard truck_id={foodtruckId} {...props} />;\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/accounts/:id/foodtrucks/:id/edit\"\n              render={(props) => {\n                const foodtruckId = this.props.match.params.id;\n                const foodTruck = this.props.allFoodtrucks.find(\n                  (foodTruck) => foodTruck.id == foodtruckId\n                );\n                return (\n                  <NewFoodtruck\n                    onSubmit={this.props.updateFoodtruck}\n                    foodtruck={foodTruck}\n                    account_id={account}\n                    {...props}\n                    buttonText=\"Update Foodtruck\"\n                    ftId={props.match.params.id}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/accounts/:id/foodtrucks/:id/delete\"\n              render={(props) => {\n                return (\n                  <Delete {...props} delete={this.props.removeFoodtruck} />\n                );\n              }}\n            />\n            {/* <Redirect to=\"/no-match\" /> */}\n          </Switch>\n        </div>\n      );\n    }\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    allFoodtrucks: state.foodtruckReducer.allFoodtrucks,\n    currentAccount: state.currentAccount,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    getCurrentAccount,\n    getAllFoodtrucks,\n    createFoodtruck,\n    updateFoodtruck,\n    removeFoodtruck,\n  })(App)\n);\n"]},"metadata":{},"sourceType":"module"}