{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/containers/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport FoodtruckCard from \"../components/FoodtruckCard\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\nconst Home = () => {\n  _s();\n\n  const [state, setState] = useState();\n  return /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n    value: this.state.address,\n    onChange: this.handleChange,\n    onSelect: this.handleSelect,\n    children: ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n          placeholder: \"Search Places ...\",\n          className: \"location-search-input\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"autocomplete-dropdown-container\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 26\n        }, this), suggestions.map(suggestion => {\n          const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n          const style = suggestion.active ? {\n            backgroundColor: \"#fafafa\",\n            cursor: \"pointer\"\n          } : {\n            backgroundColor: \"#ffffff\",\n            cursor: \"pointer\"\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n              className,\n              style\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 18\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Home, \"NTqKeJem0kxPdWdnhkCI+0oYHTA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/containers/Home.js"],"names":["React","Component","FoodtruckCard","PlacesAutocomplete","geocodeByAddress","getLatLng","Home","state","setState","useState","address","handleChange","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;;AAKA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,EAAlC;AACC,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,OADpB;AAEE,IAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,IAAA,QAAQ,EAAE,KAAKC,YAHjB;AAAA,cAKG,CAAC;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,WAAjB;AAA8BC,MAAAA,sBAA9B;AAAsDC,MAAAA;AAAtD,KAAD,kBACC;AAAA,8BACE,sBACMH,aAAa,CAAC;AAChBI,UAAAA,WAAW,EAAE,mBADG;AAEhBC,UAAAA,SAAS,EAAE;AAFK,SAAD;AADnB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,mBACGF,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADd,EAEGF,WAAW,CAACK,GAAZ,CAAiBC,UAAD,IAAgB;AAC/B,gBAAMF,SAAS,GAAGE,UAAU,CAACC,MAAX,GACd,yBADc,GAEd,iBAFJ,CAD+B,CAI/B;;AACA,gBAAMC,KAAK,GAAGF,UAAU,CAACC,MAAX,GACV;AAAEE,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,MAAM,EAAE;AAAtC,WADU,GAEV;AAAED,YAAAA,eAAe,EAAE,SAAnB;AAA8BC,YAAAA,MAAM,EAAE;AAAtC,WAFJ;AAGA,8BACE,oBACMT,sBAAsB,CAACK,UAAD,EAAa;AACrCF,cAAAA,SADqC;AAErCI,cAAAA;AAFqC,aAAb,CAD5B;AAAA,mCAME;AAAA,wBAAOF,UAAU,CAACK;AAAlB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBADF;AAUD,SAlBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAwCF,CA3CD;;GAAMnB,I;;KAAAA,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport FoodtruckCard from \"../components/FoodtruckCard\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nconst Home = () => {\n\n  const [state, setState] = useState()\n   return (\n     <PlacesAutocomplete\n       value={this.state.address}\n       onChange={this.handleChange}\n       onSelect={this.handleSelect}\n     >\n       {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n         <div>\n           <input\n             {...getInputProps({\n               placeholder: \"Search Places ...\",\n               className: \"location-search-input\",\n             })}\n           />\n           <div className=\"autocomplete-dropdown-container\">\n             {loading && <div>Loading...</div>}\n             {suggestions.map((suggestion) => {\n               const className = suggestion.active\n                 ? \"suggestion-item--active\"\n                 : \"suggestion-item\";\n               // inline style for demonstration purpose\n               const style = suggestion.active\n                 ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                 : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n               return (\n                 <div\n                   {...getSuggestionItemProps(suggestion, {\n                     className,\n                     style,\n                   })}\n                 >\n                   <span>{suggestion.description}</span>\n                 </div>\n               );\n             })}\n           </div>\n         </div>\n       )}\n     </PlacesAutocomplete>\n   );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}