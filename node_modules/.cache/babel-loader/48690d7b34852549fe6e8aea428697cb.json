{"ast":null,"code":"import { resetLoginForm } from \"./handleLoginForm\";\nimport { resetSignupForm } from \"./handleSignupForm\";\nimport { endPoints } from \"../config\";\nconst {\n  login_,\n  signup_,\n  logout_,\n  loggedIn_\n} = endPoints;\nconsole.log(_login); // synchronous action creators\n\nexport const setCurrentAccount = account => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account\n  };\n};\nexport const clearCurrentAccount = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\"\n  };\n}; // asynchronous action creators\n\nexport const login = (credentials, history) => {\n  return dispatch => {\n    return fetch(login_, {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentAccount(response.account.data));\n        dispatch(resetLoginForm());\n        alert(\"You have logged in successfully.\");\n        history.push(\"/\");\n      }\n    }).catch(console.log);\n  };\n};\nexport const signup = (credentials, history) => {\n  return dispatch => {\n    const accountInfo = {\n      account: credentials\n    };\n    return fetch(signup_, {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(accountInfo)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentAccount(response.account.data));\n        dispatch(resetSignupForm());\n        history.push(\"/\");\n      }\n    }).catch(console.log);\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch(clearCurrentAccount());\n    return fetch(logout_, {\n      credentials: \"include\",\n      method: \"DELETE\"\n    });\n  };\n};\nexport const getCurrentAccount = () => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(loggedIn_, {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        console.log(response.account.data);\n\n        if (response.account.loggedIn && getState().currentAccount.loggedIn === false) {\n          dispatch(setCurrentAccount(response.account.data));\n        }\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/currentAccount.js"],"names":["resetLoginForm","resetSignupForm","endPoints","login_","signup_","logout_","loggedIn_","console","log","_login","setCurrentAccount","account","type","clearCurrentAccount","login","credentials","history","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","response","error","alert","data","push","catch","signup","accountInfo","logout","getCurrentAccount","getState","loggedIn","currentAccount"],"mappings":"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","sourcesContent":["\nimport { resetLoginForm } from \"./handleLoginForm\";\nimport { resetSignupForm } from \"./handleSignupForm\";\nimport { endPoints } from \"../config\";\n\nconst { login_, signup_, logout_, loggedIn_ } = endPoints;\nconsole.log(_login)\n// synchronous action creators\nexport const setCurrentAccount = (account) => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account,\n  };\n};\n\nexport const clearCurrentAccount = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\",\n  };\n};\n\n// asynchronous action creators\nexport const login = (credentials, history) => {\n  return (dispatch) => {\n    return fetch(login_, {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setCurrentAccount(response.account.data));\n          dispatch(resetLoginForm());\n          alert(\"You have logged in successfully.\");\n          history.push(\"/\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const signup = (credentials, history) => {\n  return (dispatch) => {\n    const accountInfo = {\n      account: credentials,\n    };\n    return fetch(signup_, {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(accountInfo),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setCurrentAccount(response.account.data));\n          dispatch(resetSignupForm());\n          history.push(\"/\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    dispatch(clearCurrentAccount());\n    return fetch(logout_, {\n      credentials: \"include\",\n      method: \"DELETE\",\n    });\n  };\n};\n\nexport const getCurrentAccount = () => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(loggedIn_, {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          console.log(response.account.data);\n          if (\n            response.account.loggedIn &&\n            getState().currentAccount.loggedIn === false\n          ) {\n            dispatch(setCurrentAccount(response.account.data));\n          }\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}