{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/containers/Home\";\nimport Login from \"./components/sessions/Login\";\nimport Signup from \"./components/sessions/Signup\";\nimport { connect } from \"react-redux\";\nimport { getCurrentAccount } from \"./actions/currentAccount\";\nimport MainContainer from \"./components/containers/MainContainer\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentAccount();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        location: this.props.location,\n        history: this.props.history\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          render: ({\n            history\n          }) => /*#__PURE__*/_jsxDEV(Signup, {\n            history: history\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/no-match\",\n          component: NoMatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/myrecipes\",\n          component: MyRecipes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/recipes/new\",\n          render: props => /*#__PURE__*/_jsxDEV(RecipeForm, {\n            onSubmit: createRecipe,\n            ...props,\n            buttonText: \"Create A Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/recipes/:id\",\n          render: props => {\n            const recipe = allRecipes.find(recipe => recipe.id === props.match.params.id);\n            return /*#__PURE__*/_jsxDEV(RecipeCard, {\n              recipe: recipe,\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 22\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/recipes/:id/edit\",\n          render: props => {\n            const recipe = allRecipes.find(recipe => recipe.id === props.match.params.id);\n            return /*#__PURE__*/_jsxDEV(RecipeForm, {\n              onSubmit: updateRecipe,\n              recipe: recipe,\n              ...props,\n              buttonText: \"Update Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/no-match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {};\n\nexport default withRouter(connect(mapStateToProps, {\n  getCurrentAccount\n})(App));","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/App.js"],"names":["React","Component","NavBar","Home","Login","Signup","connect","getCurrentAccount","MainContainer","Route","Switch","withRouter","Redirect","App","componentDidMount","props","render","location","history","NoMatch","MyRecipes","createRecipe","recipe","allRecipes","find","id","match","params","updateRecipe","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/containers/Home\";\nimport Login from \"./components/sessions/Login\";\nimport Signup from \"./components/sessions/Signup\";\nimport { connect } from \"react-redux\";\nimport { getCurrentAccount } from \"./actions/currentAccount\";\nimport MainContainer from \"./components/containers/MainContainer\";\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getCurrentAccount();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar location={this.props.location} history={this.props.history} />\n        <Switch>\n          <Route\n            exact\n            path=\"/signup\"\n            render={({ history }) => <Signup history={history} />}\n          />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/no-match\" component={NoMatch} />\n          <Route exact path=\"/myrecipes\" component={MyRecipes} />\n          <Route\n            exact\n            path=\"/recipes/new\"\n            render={(props) => (\n              <RecipeForm\n                onSubmit={createRecipe}\n                {...props}\n                buttonText={\"Create A Recipe\"}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/recipes/:id\"\n            render={(props) => {\n              const recipe = allRecipes.find(\n                (recipe) => recipe.id === props.match.params.id\n              );\n              return <RecipeCard recipe={recipe} {...props} />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/recipes/:id/edit\"\n            render={(props) => {\n              const recipe = allRecipes.find(\n                (recipe) => recipe.id === props.match.params.id\n              );\n              return (\n                <RecipeForm\n                  onSubmit={updateRecipe}\n                  recipe={recipe}\n                  {...props}\n                  buttonText={\"Update Recipe\"}\n                />\n              );\n            }}\n          />\n          <Route exact path=\"/\" component={Home} />\n          <Redirect to=\"/no-match\" />\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {};\n\nexport default withRouter(connect(mapStateToProps, { getCurrentAccount })(App));\n"]},"metadata":{},"sourceType":"module"}