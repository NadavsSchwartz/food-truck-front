{"ast":null,"code":"import { addFoodtruck, setAllFoodtrucks, fetchFoodtruck, deleteFoodtruck } from \"../reducers/foodtruckReducer\";\nimport { updateFoodtruckForm, resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = () => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(`http://localhost:3000/api/v1/foodtrucks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setAllFoodtrucks(response));\n      }\n    }).catch(console.log);\n  };\n};\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }.then(res => res.json()).then(response => {\n      debugger;\n\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(fetchFoodtruck(response));\n      }\n    }).catch(console.log);\n  };\n};\nexport const updateFoodtruck = (foodData, accountId, foodtruckId) => {\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n  const foodtruckData = {\n    food_truck: foodData\n  };\n  debugger;\n  return disp => {\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }.then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(updateFoodtruck(response));\n        dispatch(updateFoodtruckForm());\n      }\n    }).catch(console.log));\n  };\n};\nexport const createFoodtruck = (foodData, accountId) => {\n  const foodtruckData = {\n    food_truck: foodData\n  };\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n  return dispatch => {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(addFoodtruck(response));\n        dispatch(resetFoodtruckForm());\n        alert(\"New Foodtruck Added successfuly.\");\n      }\n    }).catch(console.log);\n  };\n};\nexport const removeFoodtruck = (foodtruckId, accountId) => {\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n  return dispatch => {\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(deleteFoodtruck(response));\n        alert(\"Foodtruck deleted successfully.\");\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/foodTruck.js"],"names":["addFoodtruck","setAllFoodtrucks","fetchFoodtruck","deleteFoodtruck","updateFoodtruckForm","resetFoodtruckForm","getAllFoodtrucks","dispatch","getState","console","log","fetch","method","headers","then","res","json","response","error","alert","catch","getFoodtruck","accountId","foodtruckId","updateFoodtruck","foodData","url","foodtruckData","food_truck","disp","body","JSON","stringify","createFoodtruck","removeFoodtruck"],"mappings":"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","sourcesContent":["import {\n  addFoodtruck,\n  setAllFoodtrucks,\n  fetchFoodtruck,\n  deleteFoodtruck,\n} from \"../reducers/foodtruckReducer\";\nimport {\n  updateFoodtruckForm,\n  resetFoodtruckForm,\n} from \"./handleNewFoodtruckForm\";\n\nexport const getAllFoodtrucks = () => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(`http://localhost:3000/api/v1/foodtrucks`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setAllFoodtrucks(response));\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return (dispatch) => {\n    return (\n      fetch(\n        `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n      ),\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n        .then((res) => res.json())\n        .then((response) => {\n          debugger;\n          if (response.error) {\n            alert(response.error);\n          } else {\n            dispatch(fetchFoodtruck(response));\n          }\n        })\n        .catch(console.log)\n    );\n  };\n};\n\nexport const updateFoodtruck = (foodData, accountId, foodtruckId) => {\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n  const foodtruckData = {\n    food_truck: foodData,\n  };\n  debugger;\n  return (disp) => {\n    return fetch(\n      url,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(foodtruckData),\n      }\n        .then((res) => res.json())\n        .then((response) => {\n          if (response.error) {\n            alert(response.error);\n          } else {\n            dispatch(updateFoodtruck(response));\n            dispatch(updateFoodtruckForm());\n          }\n        })\n        .catch(console.log)\n    );\n  };\n};\n\nexport const createFoodtruck = (foodData, accountId) => {\n  const foodtruckData = {\n    food_truck: foodData,\n  };\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n  return (dispatch) => {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(addFoodtruck(response));\n          dispatch(resetFoodtruckForm());\n          alert(\"New Foodtruck Added successfuly.\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const removeFoodtruck = (foodtruckId, accountId) => {\n  const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n  return (dispatch) => {\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(deleteFoodtruck(response));\n          alert(\"Foodtruck deleted successfully.\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}