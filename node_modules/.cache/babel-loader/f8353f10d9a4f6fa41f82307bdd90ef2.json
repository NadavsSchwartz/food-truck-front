{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/containers/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Button, Form } from \"react-bootstrap\";\n\nconst Home = ({\n  location\n}) => {\n  _s();\n\n  const [toggled, setToggled] = useState(false); //   const getRecipes = () => {\n  //     // let { recipes } = props\n  //     if (searchResults !== undefined && searchResults.length > 0) {\n  //       recipes = searchResults;\n  //       return recipes;\n  //     } else {\n  //       return recipes;\n  //     }\n  //   };\n  //   const sortByAlph = () => {\n  //     if (toggled) {\n  //       return getRecipes()\n  //         .slice()\n  //         .sort((a, b) => a.attributes.name.localeCompare(b.attributes.name));\n  //     } else {\n  //       return getRecipes();\n  //     }\n  //   };\n  //   const recipeCards =\n  //     sortByAlph().length > 0 ? (\n  //       sortByAlph().map((r, i) => {\n  //         return (\n  //           <React.Fragment key={i}>\n  //             <Card className=\"recipe-card\">\n  //               <div className=\"imageContainer\">\n  //                 <Card.Img variant=\"top\" src={r.attributes.image_url} />\n  //               </div>\n  //               <Card.Body>\n  //                 <Card.Title>{r.attributes.name}</Card.Title>\n  //                 <Card.Text>{r.attributes.description}</Card.Text>\n  //                 <Button variant=\"primary\" href={`/recipes/${r.id}`}>\n  //                   View Recipe\n  //                 </Button>\n  //               </Card.Body>\n  //             </Card>\n  //           </React.Fragment>\n  //         );\n  //       })\n  //     ) : (\n  //       <p>This is myRecipes with an empty array of recipes</p>\n  //     );\n\n  const toggle = () => {\n    setToggled(!toggled);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}; // const mapStateToProps = (state) => {\n//   return {\n//     recipes: state.myRecipes.allRecipes,\n//     searchResults: state.myRecipes.searchResults,\n//   };\n//}\n\n\n_s(Home, \"pXM4iXXYgoTtU5dzCeRUJVtdWCU=\");\n\n_c = Home;\nexport default connect(null, null)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/containers/Home.js"],"names":["React","useState","connect","Card","Button","Form","Home","location","toggled","setToggled","toggle"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,iBAAnC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAD6B,CAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,MAAM,GAAG,MAAM;AACnBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9DD,C,CA+DA;AACA;AACA;AACA;AACA;AACA;;;GApEMF,I;;KAAAA,I;AAqEN,eAAeJ,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP,CAAoBI,IAApB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Button, Form } from \"react-bootstrap\";\n\nconst Home = ({ location }) => {\n  const [toggled, setToggled] = useState(false);\n\n//   const getRecipes = () => {\n//     // let { recipes } = props\n//     if (searchResults !== undefined && searchResults.length > 0) {\n//       recipes = searchResults;\n//       return recipes;\n//     } else {\n//       return recipes;\n//     }\n//   };\n\n  //   const sortByAlph = () => {\n  //     if (toggled) {\n  //       return getRecipes()\n  //         .slice()\n  //         .sort((a, b) => a.attributes.name.localeCompare(b.attributes.name));\n  //     } else {\n  //       return getRecipes();\n  //     }\n  //   };\n\n  //   const recipeCards =\n  //     sortByAlph().length > 0 ? (\n  //       sortByAlph().map((r, i) => {\n  //         return (\n  //           <React.Fragment key={i}>\n  //             <Card className=\"recipe-card\">\n  //               <div className=\"imageContainer\">\n  //                 <Card.Img variant=\"top\" src={r.attributes.image_url} />\n  //               </div>\n  //               <Card.Body>\n  //                 <Card.Title>{r.attributes.name}</Card.Title>\n  //                 <Card.Text>{r.attributes.description}</Card.Text>\n  //                 <Button variant=\"primary\" href={`/recipes/${r.id}`}>\n  //                   View Recipe\n  //                 </Button>\n  //               </Card.Body>\n  //             </Card>\n  //           </React.Fragment>\n  //         );\n  //       })\n  //     ) : (\n  //       <p>This is myRecipes with an empty array of recipes</p>\n  //     );\n\n  const toggle = () => {\n    setToggled(!toggled);\n  };\n\n  return (\n    <div>\n      <p>hey</p>\n        {/* type=\"switch\"\n        id=\"custom-switch\"\n        label=\"Sort by Alphabet\"\n        onClick={toggle} */}\n      </div>\n      \n    \n  )\n}\n// const mapStateToProps = (state) => {\n//   return {\n//     recipes: state.myRecipes.allRecipes,\n//     searchResults: state.myRecipes.searchResults,\n//   };\n//}\nexport default connect(null, null)(Home);\n"]},"metadata":{},"sourceType":"module"}