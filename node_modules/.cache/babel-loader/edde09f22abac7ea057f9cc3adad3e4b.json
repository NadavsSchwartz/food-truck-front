{"ast":null,"code":"var _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) {\n    return new XDropWhile(f, xf);\n  });\n}();","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/internal/_xdropWhile.js"],"names":["_curry2","require","_xfBase","module","exports","XDropWhile","f","xf","prototype","init","result","input","_xdropWhile"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;;AAGAE,MAAM,CAACC,OAAP,GAAkB,YAAW;AAC3B,WAASC,UAAT,CAAoBC,CAApB,EAAuBC,EAAvB,EAA2B;AACzB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKD,CAAL,GAASA,CAAT;AACD;;AACDD,EAAAA,UAAU,CAACG,SAAX,CAAqB,mBAArB,IAA4CN,OAAO,CAACO,IAApD;AACAJ,EAAAA,UAAU,CAACG,SAAX,CAAqB,qBAArB,IAA8CN,OAAO,CAACQ,MAAtD;;AACAL,EAAAA,UAAU,CAACG,SAAX,CAAqB,mBAArB,IAA4C,UAASE,MAAT,EAAiBC,KAAjB,EAAwB;AAClE,QAAI,KAAKL,CAAT,EAAY;AACV,UAAI,KAAKA,CAAL,CAAOK,KAAP,CAAJ,EAAmB;AACjB,eAAOD,MAAP;AACD;;AACD,WAAKJ,CAAL,GAAS,IAAT;AACD;;AACD,WAAO,KAAKC,EAAL,CAAQ,mBAAR,EAA6BG,MAA7B,EAAqCC,KAArC,CAAP;AACD,GARD;;AAUA,SAAOX,OAAO,CAAC,SAASY,WAAT,CAAqBN,CAArB,EAAwBC,EAAxB,EAA4B;AAAE,WAAO,IAAIF,UAAJ,CAAeC,CAAf,EAAkBC,EAAlB,CAAP;AAA+B,GAA9D,CAAd;AACD,CAlBiB,EAAlB","sourcesContent":["var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });\n}());\n"]},"metadata":{},"sourceType":"script"}