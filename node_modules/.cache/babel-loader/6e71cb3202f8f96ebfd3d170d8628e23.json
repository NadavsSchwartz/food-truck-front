{"ast":null,"code":"import { addFoodtruck, setAllFoodtrucks, deleteFoodtruck, updateFoodtruckData } from \"../reducers/foodtruckReducer\";\nimport { resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = account_id => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${account_id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setAllFoodtrucks(response.food_trucks));\n      }\n    });\n  };\n};\nexport const updateFoodtruck = (foodData, accountId, foodtruckId, history) => {\n  return dispatch => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    const foodtruckData = {\n      food_truck: foodData\n    };\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        // dispatch(updateFoodtruckData(response));\n        getAllFoodtrucks();\n        dispatch(resetFoodtruckForm());\n        alert(\"Foodtruck data updated!\");\n        history.push(`/accounts/${accountId}/foodtrucks/${foodtruckId}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const createFoodtruck = (foodData, accountId, history) => {\n  return dispatch => {\n    const foodtruckData = {\n      food_truck: foodData\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(addFoodtruck(response));\n        dispatch(resetFoodtruckForm());\n        alert(\"New Foodtruck Added successfuly.\");\n        history.push(`/accounts/${accountId}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const removeFoodtruck = (foodtruckId, accountId, history) => {\n  return dispatch => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(deleteFoodtruck(response));\n        alert(\"Foodtruck deleted successfully.\");\n        history.push(`/accounts/${accountId}`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/foodTruck.js"],"names":["addFoodtruck","setAllFoodtrucks","deleteFoodtruck","updateFoodtruckData","resetFoodtruckForm","getAllFoodtrucks","account_id","dispatch","fetch","method","headers","then","res","json","response","error","alert","food_trucks","updateFoodtruck","foodData","accountId","foodtruckId","history","url","foodtruckData","food_truck","body","JSON","stringify","push","catch","console","log","createFoodtruck","removeFoodtruck"],"mappings":"AAAA,SACEA,YADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,mBAJF,QAKO,8BALP;AAMA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,OAAO,MAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AAC9C,SAAQC,QAAD,IAAc;AACnB,WAAOC,KAAK,CAAE,yCAAwCF,UAAW,EAArD,EAAwD;AAClEG,MAAAA,MAAM,EAAE,KAD0D;AAElEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFyD,KAAxD,CAAL,CAMJC,IANI,CAMEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANV,EAOJF,IAPI,CAOEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLR,QAAAA,QAAQ,CAACN,gBAAgB,CAACa,QAAQ,CAACG,WAAV,CAAjB,CAAR;AACD;AACF,KAbI,CAAP;AAcD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,WAAtB,EAAmCC,OAAnC,KAA+C;AAC5E,SAAQf,QAAD,IAAc;AACnB,UAAMgB,GAAG,GAAI,yCAAwCH,SAAU,eAAcC,WAAY,EAAzF;AACA,UAAMG,aAAa,GAAG;AACpBC,MAAAA,UAAU,EAAEN;AADQ,KAAtB;AAGA,WAAOX,KAAK,CAACe,GAAD,EAAM;AAChBd,MAAAA,MAAM,EAAE,OADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFO;AAKhBgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAf;AALU,KAAN,CAAL,CAOJb,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,EAQJF,IARI,CAQEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACL;AACAV,QAAAA,gBAAgB;AAChBE,QAAAA,QAAQ,CAACH,kBAAkB,EAAnB,CAAR;AACAY,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACAM,QAAAA,OAAO,CAACO,IAAR,CAAc,aAAYT,SAAU,eAAcC,WAAY,EAA9D;AACD;AACF,KAlBI,EAmBJS,KAnBI,CAmBEC,OAAO,CAACC,GAnBV,CAAP;AAoBD,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,MAAMC,eAAe,GAAG,CAACd,QAAD,EAAWC,SAAX,EAAsBE,OAAtB,KAAkC;AAC/D,SAAQf,QAAD,IAAc;AACnB,UAAMiB,aAAa,GAAG;AACpBC,MAAAA,UAAU,EAAEN;AADQ,KAAtB;AAGA,UAAMI,GAAG,GAAI,yCAAwCH,SAAU,aAA/D;AACA,WAAOZ,KAAK,CAACe,GAAD,EAAM;AAChBd,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFO;AAKhBgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAf;AALU,KAAN,CAAL,CAOJb,IAPI,CAOEG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EAPf,EAQJF,IARI,CAQEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLR,QAAAA,QAAQ,CAACP,YAAY,CAACc,QAAD,CAAb,CAAR;AACAP,QAAAA,QAAQ,CAACH,kBAAkB,EAAnB,CAAR;AAEAY,QAAAA,KAAK,CAAC,kCAAD,CAAL;AACAM,QAAAA,OAAO,CAACO,IAAR,CAAc,aAAYT,SAAU,EAApC;AACD;AACF,KAlBI,EAmBJU,KAnBI,CAmBEC,OAAO,CAACC,GAnBV,CAAP;AAoBD,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,MAAME,eAAe,GAAG,CAACb,WAAD,EAAcD,SAAd,EAAyBE,OAAzB,KAAqC;AAClE,SAAQf,QAAD,IAAc;AACnB,UAAMgB,GAAG,GAAI,yCAAwCH,SAAU,eAAcC,WAAY,EAAzF;AACA,WAAOb,KAAK,CAACe,GAAD,EAAM;AAChBd,MAAAA,MAAM,EAAE,QADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFO,KAAN,CAAL,CAMJC,IANI,CAMEG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EANf,EAOJF,IAPI,CAOEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLR,QAAAA,QAAQ,CAACL,eAAe,CAACY,QAAD,CAAhB,CAAR;AACAE,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACAM,QAAAA,OAAO,CAACO,IAAR,CAAc,aAAYT,SAAU,EAApC;AACD;AACF,KAfI,EAgBJU,KAhBI,CAgBEC,OAAO,CAACC,GAhBV,CAAP;AAiBD,GAnBD;AAoBD,CArBM","sourcesContent":["import {\n  addFoodtruck,\n  setAllFoodtrucks,\n  deleteFoodtruck,\n  updateFoodtruckData,\n} from \"../reducers/foodtruckReducer\";\nimport { resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = (account_id) => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${account_id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setAllFoodtrucks(response.food_trucks));\n        }\n      });\n  };\n};\n\nexport const updateFoodtruck = (foodData, accountId, foodtruckId, history) => {\n  return (dispatch) => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    const foodtruckData = {\n      food_truck: foodData,\n    };\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          // dispatch(updateFoodtruckData(response));\n          getAllFoodtrucks()\n          dispatch(resetFoodtruckForm());\n          alert(\"Foodtruck data updated!\");\n          history.push(`/accounts/${accountId}/foodtrucks/${foodtruckId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const createFoodtruck = (foodData, accountId, history) => {\n  return (dispatch) => {\n    const foodtruckData = {\n      food_truck: foodData,\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(addFoodtruck(response));\n          dispatch(resetFoodtruckForm());\n\n          alert(\"New Foodtruck Added successfuly.\");\n          history.push(`/accounts/${accountId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const removeFoodtruck = (foodtruckId, accountId, history) => {\n  return (dispatch) => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(deleteFoodtruck(response));\n          alert(\"Foodtruck deleted successfully.\");\n          history.push(`/accounts/${accountId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}