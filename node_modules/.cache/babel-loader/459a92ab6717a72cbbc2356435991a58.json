{"ast":null,"code":"var _concat = require('./_concat');\n\nvar _curry2 = require('./_curry2');\n\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) {\n    return new XAperture(n, xf);\n  });\n}();","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/internal/_xaperture.js"],"names":["_concat","require","_curry2","_xfBase","module","exports","XAperture","n","xf","pos","full","acc","Array","prototype","init","result","input","store","getCopy","length","slice","call","_xaperture"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,WAAD,CAArB;;AAGAG,MAAM,CAACC,OAAP,GAAkB,YAAW;AAC3B,WAASC,SAAT,CAAmBC,CAAnB,EAAsBC,EAAtB,EAA0B;AACxB,SAAKA,EAAL,GAAUA,EAAV;AACA,SAAKC,GAAL,GAAW,CAAX;AACA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKC,GAAL,GAAW,IAAIC,KAAJ,CAAUL,CAAV,CAAX;AACD;;AACDD,EAAAA,SAAS,CAACO,SAAV,CAAoB,mBAApB,IAA2CV,OAAO,CAACW,IAAnD;;AACAR,EAAAA,SAAS,CAACO,SAAV,CAAoB,qBAApB,IAA6C,UAASE,MAAT,EAAiB;AAC5D,SAAKJ,GAAL,GAAW,IAAX;AACA,WAAO,KAAKH,EAAL,CAAQ,qBAAR,EAA+BO,MAA/B,CAAP;AACD,GAHD;;AAIAT,EAAAA,SAAS,CAACO,SAAV,CAAoB,mBAApB,IAA2C,UAASE,MAAT,EAAiBC,KAAjB,EAAwB;AACjE,SAAKC,KAAL,CAAWD,KAAX;AACA,WAAO,KAAKN,IAAL,GAAY,KAAKF,EAAL,CAAQ,mBAAR,EAA6BO,MAA7B,EAAqC,KAAKG,OAAL,EAArC,CAAZ,GAAmEH,MAA1E;AACD,GAHD;;AAIAT,EAAAA,SAAS,CAACO,SAAV,CAAoBI,KAApB,GAA4B,UAASD,KAAT,EAAgB;AAC1C,SAAKL,GAAL,CAAS,KAAKF,GAAd,IAAqBO,KAArB;AACA,SAAKP,GAAL,IAAY,CAAZ;;AACA,QAAI,KAAKA,GAAL,KAAa,KAAKE,GAAL,CAASQ,MAA1B,EAAkC;AAChC,WAAKV,GAAL,GAAW,CAAX;AACA,WAAKC,IAAL,GAAY,IAAZ;AACD;AACF,GAPD;;AAQAJ,EAAAA,SAAS,CAACO,SAAV,CAAoBK,OAApB,GAA8B,YAAW;AACvC,WAAOlB,OAAO,CAACY,KAAK,CAACC,SAAN,CAAgBO,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKV,GAAhC,EAAqC,KAAKF,GAA1C,CAAD,EACCG,KAAK,CAACC,SAAN,CAAgBO,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKV,GAAhC,EAAqC,CAArC,EAAwC,KAAKF,GAA7C,CADD,CAAd;AAED,GAHD;;AAKA,SAAOP,OAAO,CAAC,SAASoB,UAAT,CAAoBf,CAApB,EAAuBC,EAAvB,EAA2B;AAAE,WAAO,IAAIF,SAAJ,CAAcC,CAAd,EAAiBC,EAAjB,CAAP;AAA8B,GAA5D,CAAd;AACD,CA9BiB,EAAlB","sourcesContent":["var _concat = require('./_concat');\nvar _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function(result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function() {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos),\n                   Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });\n}());\n"]},"metadata":{},"sourceType":"script"}