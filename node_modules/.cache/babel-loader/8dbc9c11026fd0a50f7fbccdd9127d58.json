{"ast":null,"code":"import { resetLoginForm } from \"./handleLoginForm\";\nimport { resetSignupForm } from \"./handleSignupForm\";\nimport { endPoints } from \"../config\";\nconst {\n  login_,\n  signup_,\n  logout_,\n  loggedIn_\n} = endPoints; // synchronous action creators\n\nexport const setCurrentAccount = account => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    action: account\n  };\n  debugger;\n};\nexport const clearCurrentAccount = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\"\n  };\n}; // asynchronous action creators\n\nexport const login = (credentials, history) => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentAccount(response.account));\n        console.log(setCurrentAccount);\n        dispatch(resetLoginForm());\n        alert(\"You have logged in successfully.\");\n        history.push(\"/\");\n        console.log(`response.account: ${response.account}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const signup = (credentials, history) => {\n  return dispatch => {\n    const accountInfo = {\n      account: credentials\n    };\n    return fetch(signup_, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(accountInfo)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setCurrentAccount(response.account));\n        dispatch(resetSignupForm());\n        history.push(\"/\");\n      }\n    }).catch(console.log);\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch(clearCurrentAccount());\n    return fetch(logout_, {\n      method: \"DELETE\"\n    });\n  };\n};\nexport const getCurrentAccount = () => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(\"http://localhost:3000/api/v1/get_current_account\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      res.json();\n    }).then(response => {\n      if (response.error) {\n        console.log(response.error);\n      } else {\n        console.log(response.account);\n\n        if (response.account.loggedIn && getState().currentAccount.loggedIn === false) {\n          dispatch(setCurrentAccount(response.account));\n        }\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/currentAccount.js"],"names":["resetLoginForm","resetSignupForm","endPoints","login_","signup_","logout_","loggedIn_","setCurrentAccount","account","type","action","clearCurrentAccount","login","credentials","history","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","response","error","alert","console","log","push","catch","signup","accountInfo","logout","getCurrentAccount","getState","loggedIn","currentAccount"],"mappings":"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","sourcesContent":["import { resetLoginForm } from \"./handleLoginForm\";\nimport { resetSignupForm } from \"./handleSignupForm\";\nimport { endPoints } from \"../config\";\n\nconst { login_, signup_, logout_, loggedIn_ } = endPoints;\n\n// synchronous action creators\nexport const setCurrentAccount = (account) => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    action: account,\n  };\n  debugger;\n};\n\nexport const clearCurrentAccount = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\",\n  };\n};\n\n// asynchronous action creators\nexport const login = (credentials, history) => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setCurrentAccount(response.account));\n          console.log(setCurrentAccount);\n          dispatch(resetLoginForm());\n          alert(\"You have logged in successfully.\");\n          history.push(\"/\");\n          console.log(`response.account: ${response.account}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const signup = (credentials, history) => {\n  return (dispatch) => {\n    const accountInfo = {\n      account: credentials,\n    };\n    return fetch(signup_, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(accountInfo),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setCurrentAccount(response.account));\n          dispatch(resetSignupForm());\n          history.push(\"/\");\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    dispatch(clearCurrentAccount());\n    return fetch(logout_, {\n      method: \"DELETE\",\n    });\n  };\n};\n\nexport const getCurrentAccount = () => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return fetch(\"http://localhost:3000/api/v1/get_current_account\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((response) => {\n        if (response.error) {\n          console.log(response.error);\n        } else {\n          console.log(response.account);\n          if (\n            response.account.loggedIn &&\n            getState().currentAccount.loggedIn === false\n          ) {\n            dispatch(setCurrentAccount(response.account));\n          }\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}