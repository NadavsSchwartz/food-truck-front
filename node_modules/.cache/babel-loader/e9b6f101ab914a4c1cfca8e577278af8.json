{"ast":null,"code":"import { addFoodtruck, setAllFoodtrucks, fetchFoodtruck, deleteFoodtruck, updateFoodtruckData } from \"../reducers/foodtruckReducer\";\nimport { resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = () => {\n  return (dispatch, getState) => {\n    return fetch(`http://localhost:3000/api/v1/foodtrucks`, {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        debugger;\n      } else {\n        dispatch(setAllFoodtrucks(response));\n      }\n    }).catch(console.log);\n  };\n};\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }.then(res => res.json()).then(response => {\n      debugger;\n\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(fetchFoodtruck(response));\n      }\n    }).catch(console.log);\n  };\n};\nexport const updateFoodtruck = (foodData, accountId, foodtruckId, history) => {\n  return dispatch => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    const foodtruckData = {\n      food_truck: foodData\n    };\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(updateFoodtruckData(response));\n        dispatch(resetFoodtruckForm());\n        alert(\"Foodtruck data updated!\");\n        history.push(`/accounts/${accountId}/foodtrucks/${foodtruckId}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const createFoodtruck = (foodData, accountId, history) => {\n  return dispatch => {\n    const foodtruckData = {\n      food_truck: foodData\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(foodtruckData)\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(addFoodtruck(response));\n        dispatch(resetFoodtruckForm());\n        alert(\"New Foodtruck Added successfuly.\");\n        history.push(`/accounts/${accountId}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const removeFoodtruck = (foodtruckId, {\n  accountId\n}, history) => {\n  return dispatch => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(deleteFoodtruck(response));\n        alert(\"Foodtruck deleted successfully.\");\n        history.push(`/accounts/${accountId}`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/foodTruck.js"],"names":["addFoodtruck","setAllFoodtrucks","fetchFoodtruck","deleteFoodtruck","updateFoodtruckData","resetFoodtruckForm","getAllFoodtrucks","dispatch","getState","fetch","credentials","method","headers","then","res","json","response","error","catch","console","log","getFoodtruck","accountId","foodtruckId","alert","updateFoodtruck","foodData","history","url","foodtruckData","food_truck","body","JSON","stringify","push","createFoodtruck","removeFoodtruck"],"mappings":"AAAA,SACEA,YADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,mBALF,QAMO,8BANP;AAOA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,WAAOC,KAAK,CAAE,yCAAF,EAA4C;AACtDC,MAAAA,WAAW,EAAE,SADyC;AAEtDC,MAAAA,MAAM,EAAE,KAF8C;AAGtDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH6C,KAA5C,CAAL,CAOJC,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,EAQJF,IARI,CAQEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAACN,gBAAgB,CAACe,QAAD,CAAjB,CAAR;AACD;AACF,KAdI,EAeJE,KAfI,CAeEC,OAAO,CAACC,GAfV,CAAP;AAgBD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,YAAY,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA4B;AACtD,SAAQhB,QAAD,IAAc;AACnB,WACEE,KAAK,CACF,yCAAwCa,SAAU,gBAAeC,WAAY,EAD3E,CAAL,EAGA;AACEZ,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFX,MAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSG,QAAD,IAAc;AAClB;;AACA,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBO,QAAAA,KAAK,CAACR,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAACL,cAAc,CAACc,QAAD,CAAf,CAAR;AACD;AACF,KAdH,EAeGE,KAfH,CAeSC,OAAO,CAACC,GAfjB,CAJF;AAqBD,GAtBD;AAuBD,CAxBM;AA0BP,OAAO,MAAMK,eAAe,GAAG,CAACC,QAAD,EAAWJ,SAAX,EAAsBC,WAAtB,EAAmCI,OAAnC,KAA+C;AAC5E,SAAQpB,QAAD,IAAc;AACnB,UAAMqB,GAAG,GAAI,yCAAwCN,SAAU,eAAcC,WAAY,EAAzF;AACA,UAAMM,aAAa,GAAG;AACpBC,MAAAA,UAAU,EAAEJ;AADQ,KAAtB;AAGA,WAAOjB,KAAK,CAACmB,GAAD,EAAM;AAChBjB,MAAAA,MAAM,EAAE,OADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFO;AAKhBmB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAf;AALU,KAAN,CAAL,CAOJhB,IAPI,CAOEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPV,EAQJF,IARI,CAQEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBO,QAAAA,KAAK,CAACR,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAACH,mBAAmB,CAACY,QAAD,CAApB,CAAR;AACAT,QAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACAmB,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACAG,QAAAA,OAAO,CAACO,IAAR,CAAc,aAAYZ,SAAU,eAAcC,WAAY,EAA9D;AACD;AACF,KAjBI,EAkBJL,KAlBI,CAkBEC,OAAO,CAACC,GAlBV,CAAP;AAmBD,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMe,eAAe,GAAG,CAACT,QAAD,EAAWJ,SAAX,EAAsBK,OAAtB,KAAkC;AAC/D,SAAQpB,QAAD,IAAc;AACnB,UAAMsB,aAAa,GAAG;AACpBC,MAAAA,UAAU,EAAEJ;AADQ,KAAtB;AAGA,UAAME,GAAG,GAAI,yCAAwCN,SAAU,aAA/D;AACA,WAAOb,KAAK,CAACmB,GAAD,EAAM;AAChBjB,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFO;AAKhBmB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,aAAf;AALU,KAAN,CAAL,CAOJhB,IAPI,CAOEG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EAPf,EAQJF,IARI,CAQEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBO,QAAAA,KAAK,CAACR,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAACP,YAAY,CAACgB,QAAD,CAAb,CAAR;AACAT,QAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACAmB,QAAAA,KAAK,CAAC,kCAAD,CAAL;AACAG,QAAAA,OAAO,CAACO,IAAR,CAAc,aAAYZ,SAAU,EAApC;AACD;AACF,KAjBI,EAkBJJ,KAlBI,CAkBEC,OAAO,CAACC,GAlBV,CAAP;AAmBD,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMgB,eAAe,GAAG,CAACb,WAAD,EAAc;AAAED,EAAAA;AAAF,CAAd,EAA6BK,OAA7B,KAAyC;AACtE,SAAQpB,QAAD,IAAc;AACnB,UAAMqB,GAAG,GAAI,yCAAwCN,SAAU,eAAcC,WAAY,EAAzF;AACA,WAAOd,KAAK,CAACmB,GAAD,EAAM;AAChBjB,MAAAA,MAAM,EAAE,QADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFO,KAAN,CAAL,CAMJC,IANI,CAMEG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EANf,EAOJF,IAPI,CAOEG,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBO,QAAAA,KAAK,CAACR,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAACJ,eAAe,CAACa,QAAD,CAAhB,CAAR;AACAQ,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACAG,QAAAA,OAAO,CAACO,IAAR,CAAc,aAAYZ,SAAU,EAApC;AACD;AACF,KAfI,EAgBJJ,KAhBI,CAgBEC,OAAO,CAACC,GAhBV,CAAP;AAiBD,GAnBD;AAoBD,CArBM","sourcesContent":["import {\n  addFoodtruck,\n  setAllFoodtrucks,\n  fetchFoodtruck,\n  deleteFoodtruck,\n  updateFoodtruckData,\n} from \"../reducers/foodtruckReducer\";\nimport { resetFoodtruckForm } from \"./handleNewFoodtruckForm\";\nexport const getAllFoodtrucks = () => {\n  return (dispatch, getState) => {\n    return fetch(`http://localhost:3000/api/v1/foodtrucks`, {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          debugger;\n        } else {\n          dispatch(setAllFoodtrucks(response));\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return (dispatch) => {\n    return (\n      fetch(\n        `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n      ),\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n        .then((res) => res.json())\n        .then((response) => {\n          debugger;\n          if (response.error) {\n            alert(response.error);\n          } else {\n            dispatch(fetchFoodtruck(response));\n          }\n        })\n        .catch(console.log)\n    );\n  };\n};\n\nexport const updateFoodtruck = (foodData, accountId, foodtruckId, history) => {\n  return (dispatch) => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    const foodtruckData = {\n      food_truck: foodData,\n    };\n    return fetch(url, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(updateFoodtruckData(response));\n          dispatch(resetFoodtruckForm());\n          alert(\"Foodtruck data updated!\");\n          history.push(`/accounts/${accountId}/foodtrucks/${foodtruckId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const createFoodtruck = (foodData, accountId, history) => {\n  return (dispatch) => {\n    const foodtruckData = {\n      food_truck: foodData,\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(foodtruckData),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(addFoodtruck(response));\n          dispatch(resetFoodtruckForm());\n          alert(\"New Foodtruck Added successfuly.\");\n          history.push(`/accounts/${accountId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const removeFoodtruck = (foodtruckId, { accountId }, history) => {\n  return (dispatch) => {\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/foodtrucks/${foodtruckId}`;\n    return fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(deleteFoodtruck(response));\n          alert(\"Foodtruck deleted successfully.\");\n          history.push(`/accounts/${accountId}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}