{"ast":null,"code":"var _curry3 = require('./internal/_curry3');\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nmodule.exports = function () {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function (x) {\n    return {\n      value: x,\n      map: function (f) {\n        return Identity(f(x));\n      }\n    };\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function (y) {\n      return Identity(f(y));\n    })(x).value;\n  });\n}();","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/over.js"],"names":["_curry3","require","module","exports","Identity","x","value","map","f","over","lens","y"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAkB,YAAW;AAC3B;AACA;AACA,MAAIC,QAAQ,GAAG,UAASC,CAAT,EAAY;AACzB,WAAO;AAACC,MAAAA,KAAK,EAAED,CAAR;AAAWE,MAAAA,GAAG,EAAE,UAASC,CAAT,EAAY;AAAE,eAAOJ,QAAQ,CAACI,CAAC,CAACH,CAAD,CAAF,CAAf;AAAwB;AAAtD,KAAP;AACD,GAFD;;AAIA,SAAOL,OAAO,CAAC,SAASS,IAAT,CAAcC,IAAd,EAAoBF,CAApB,EAAuBH,CAAvB,EAA0B;AACvC;AACA;AACA;AACA,WAAOK,IAAI,CAAC,UAASC,CAAT,EAAY;AAAE,aAAOP,QAAQ,CAACI,CAAC,CAACG,CAAD,CAAF,CAAf;AAAwB,KAAvC,CAAJ,CAA6CN,CAA7C,EAAgDC,KAAvD;AACD,GALa,CAAd;AAMD,CAbiB,EAAlB","sourcesContent":["var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nmodule.exports = (function() {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function(x) {\n    return {value: x, map: function(f) { return Identity(f(x)); }};\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function(y) { return Identity(f(y)); })(x).value;\n  });\n}());\n"]},"metadata":{},"sourceType":"script"}