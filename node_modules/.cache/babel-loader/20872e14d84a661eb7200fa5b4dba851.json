{"ast":null,"code":"import { addFoodtruck, setAllFoodtrucks, fetchFoodtruck } from \"../reducers/foodtruckReducer\";\nimport axios from 'axios';\nexport const getAllFoodtrucks = accountId => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return axios.post(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setAllFoodtrucks(response.data));\n      }\n    }).catch(console.log);\n  };\n};\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }.then(res => res.json()).then(response => {\n      debugger;\n\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(fetchFoodtruck(response.data));\n      }\n    }).catch(console.log);\n  };\n};\nexport const updateFoodtruck = (foodtruckData, accountId, foodtruckId, history) => {\n  return dispatch => {\n    const sendableFoodtruckData = {\n      name: foodtruckData.name,\n      location: foodtruckData.location,\n      category: foodtruckData.category,\n      hours: foodtruckData.hours,\n      score: foodtruckData.score,\n      description: foodtruckData.description,\n      accountId: foodtruckData.accountId\n    };\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`), {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableFoodtruckData)\n    }.then(res => res.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(updateFoodtruck(response.data));\n        history.push(`/accounts/${accountId}/food_trucks/${foodtruckId}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const createFoodtruck = (foodtruckData, history, accountId) => {\n  return dispatch => {\n    const sendableFoodtruckData = {\n      name: foodtruckData.name,\n      location: foodtruckData.location,\n      category: foodtruckData.category,\n      hours: foodtruckData.hours,\n      score: foodtruckData.score,\n      description: foodtruckData.description,\n      accountId: accountId\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableFoodtruckData)\n    }).then(resp => resp.json()).then(resp => {\n      debugger;\n\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(addFoodtruck(resp.data));\n        history.push(`/accounts/${accountId}/food_trucks`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/actions/foodtruckReducer.js"],"names":["addFoodtruck","setAllFoodtrucks","fetchFoodtruck","axios","getAllFoodtrucks","accountId","dispatch","getState","console","log","post","headers","then","res","json","response","error","alert","data","catch","getFoodtruck","foodtruckId","fetch","method","updateFoodtruck","foodtruckData","history","sendableFoodtruckData","name","location","category","hours","score","description","body","JSON","stringify","push","createFoodtruck","url","resp"],"mappings":"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","sourcesContent":["import {\n  addFoodtruck,\n  setAllFoodtrucks,\n  fetchFoodtruck,\n} from \"../reducers/foodtruckReducer\";\nimport axios from 'axios'\n\nexport const getAllFoodtrucks = (accountId) => {\n  return (dispatch, getState) => {\n    console.log(getState());\n    return axios.post(\n      `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error) {\n          alert(response.error);\n        } else {\n          dispatch(setAllFoodtrucks(response.data));\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const getFoodtruck = (accountId, foodtruckId) => {\n  return (dispatch) => {\n    return (\n      fetch(\n        `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n      ),\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n        .then((res) => res.json())\n        .then((response) => {\n          debugger;\n          if (response.error) {\n            alert(response.error);\n          } else {\n            dispatch(fetchFoodtruck(response.data));\n          }\n        })\n        .catch(console.log)\n    );\n  };\n};\n\nexport const updateFoodtruck = (\n  foodtruckData,\n  accountId,\n  foodtruckId,\n  history\n) => {\n  return (dispatch) => {\n    const sendableFoodtruckData = {\n      name: foodtruckData.name,\n      location: foodtruckData.location,\n      category: foodtruckData.category,\n      hours: foodtruckData.hours,\n      score: foodtruckData.score,\n      description: foodtruckData.description,\n      accountId: foodtruckData.accountId,\n    };\n    return (\n      fetch(\n        `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks/${foodtruckId}`\n      ),\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(sendableFoodtruckData),\n      }\n\n        .then((res) => res.json())\n        .then((response) => {\n          if (response.error) {\n            alert(response.error);\n          } else {\n            dispatch(updateFoodtruck(response.data));\n            history.push(`/accounts/${accountId}/food_trucks/${foodtruckId}`);\n          }\n        })\n        .catch(console.log)\n    );\n  };\n};\n\nexport const createFoodtruck = (foodtruckData, history, accountId) => {\n  return (dispatch) => {\n    const sendableFoodtruckData = {\n      name: foodtruckData.name,\n      location: foodtruckData.location,\n      category: foodtruckData.category,\n      hours: foodtruckData.hours,\n      score: foodtruckData.score,\n      description: foodtruckData.description,\n      accountId: accountId,\n    };\n    const url = `http://localhost:3000/api/v1/accounts/${accountId}/food_trucks`;\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(sendableFoodtruckData),\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        debugger;\n        if (resp.error) {\n          alert(resp.error);\n        } else {\n          dispatch(addFoodtruck(resp.data));\n          history.push(`/accounts/${accountId}/food_trucks`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}