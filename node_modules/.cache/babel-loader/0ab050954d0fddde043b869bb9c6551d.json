{"ast":null,"code":"var _Set = require('./internal/_Set');\n\nvar _curry2 = require('./internal/_curry2');\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. `R.equals` is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\n\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/ReactProject/money-target/node_modules/ramda/src/uniqBy.js"],"names":["_Set","require","_curry2","module","exports","uniqBy","fn","list","set","result","idx","appliedItem","item","length","add","push"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,oBAAD,CAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAAC,SAASG,MAAT,CAAgBC,EAAhB,EAAoBC,IAApB,EAA0B;AACjD,MAAIC,GAAG,GAAG,IAAIR,IAAJ,EAAV;AACA,MAAIS,MAAM,GAAG,EAAb;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,WAAJ,EAAiBC,IAAjB;;AAEA,SAAOF,GAAG,GAAGH,IAAI,CAACM,MAAlB,EAA0B;AACxBD,IAAAA,IAAI,GAAGL,IAAI,CAACG,GAAD,CAAX;AACAC,IAAAA,WAAW,GAAGL,EAAE,CAACM,IAAD,CAAhB;;AACA,QAAIJ,GAAG,CAACM,GAAJ,CAAQH,WAAR,CAAJ,EAA0B;AACxBF,MAAAA,MAAM,CAACM,IAAP,CAAYH,IAAZ;AACD;;AACDF,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,SAAOD,MAAP;AACD,CAfuB,CAAxB","sourcesContent":["var _Set = require('./internal/_Set');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. `R.equals` is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\n"]},"metadata":{},"sourceType":"script"}