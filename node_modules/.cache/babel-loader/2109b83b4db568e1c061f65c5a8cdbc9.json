{"ast":null,"code":"const initialState = {\n  allFoodtrucks: []\n};\nexport default function manageFoodtruck(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_ALL_FOODTRUCKS\":\n      return { ...state,\n        allFoodtrucks: action.action\n      };\n\n    case \"FETCH_FOODTRUCK\":\n      return { ...state,\n        allFoodtrucks: action.action\n      };\n\n    case \"ADD_FOODTRUCK\":\n      return { ...state,\n        allFoodtrucks: [...state.allFoodtrucks, action.action]\n      };\n\n    case \"UPDATE_FOODTRUCK\":\n      debugger;\n      const oldIndex = state.allFoodtrucks.find(ft => {\n        return ft.id == action.action.id;\n      });\n      const newIndex = state.allFoodtrucks.indexOf(oldIndex);\n      return { ...state,\n        allFoodtrucks: [state.allFoodtrucks[newIndex] = action.action]\n      };\n\n    case \"DELETE_FOODTRUCK\":\n      return { ...state,\n        allFoodtrucks: state.allFoodtrucks.splice(action.action.foodtruck_id, 1)\n      };\n\n    default:\n      return state;\n  }\n}\nexport const setAllFoodtrucks = allTrucks => {\n  return {\n    type: \"SET_ALL_FOODTRUCKS\",\n    action: allTrucks\n  };\n};\nexport const addFoodtruck = foodtruck => {\n  return {\n    type: \"ADD_FOODTRUCK\",\n    action: foodtruck\n  };\n};\nexport const updateFoodtruckData = foodtruck => {\n  return {\n    type: \"UPDATE_FOODTRUCK\",\n    action: foodtruck\n  };\n};\nexport const fetchFoodtruck = foodtruck => {\n  return {\n    type: \"FETCH_FOODTRUCK\",\n    action: foodtruck\n  };\n};\nexport const deleteFoodtruck = foodtruck => {\n  return {\n    type: \"DELETE_FOODTRUCK\",\n    action: foodtruck\n  };\n};","map":{"version":3,"sources":["/Users/nadavschwartz/Desktop/food_truck-frontend/food_truck_front/src/reducers/foodtruckReducer.js"],"names":["initialState","allFoodtrucks","manageFoodtruck","state","action","type","oldIndex","find","ft","id","newIndex","indexOf","splice","foodtruck_id","setAllFoodtrucks","allTrucks","addFoodtruck","foodtruck","updateFoodtruckData","fetchFoodtruck","deleteFoodtruck"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AADI,CAArB;AAIA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGH,YAAjC,EAA+CI,MAA/C,EAAuD;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,oBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,aAAa,EAAEG,MAAM,CAACA;AAFjB,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGD,KADE;AAELF,QAAAA,aAAa,EAAEG,MAAM,CAACA;AAFjB,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGD,KADE;AAELF,QAAAA,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAV,EAAyBG,MAAM,CAACA,MAAhC;AAFV,OAAP;;AAIF,SAAK,kBAAL;AACE;AACA,YAAME,QAAQ,GAAGH,KAAK,CAACF,aAAN,CAAoBM,IAApB,CAA0BC,EAAD,IAAQ;AAC9C,eAAOA,EAAE,CAACC,EAAH,IAASL,MAAM,CAACA,MAAP,CAAcK,EAA9B;AACH,OAFgB,CAAjB;AAGA,YAAMC,QAAQ,GAAGP,KAAK,CAACF,aAAN,CAAoBU,OAApB,CAA4BL,QAA5B,CAAjB;AACA,aAAO,EAAC,GAAGH,KAAJ;AACLF,QAAAA,aAAa,EAAE,CACbE,KAAK,CAACF,aAAN,CAAoBS,QAApB,IAAgCN,MAAM,CAACA,MAD1B;AADV,OAAP;;AAMF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGD,KADE;AAELF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBW,MAApB,CACbR,MAAM,CAACA,MAAP,CAAcS,YADD,EAEb,CAFa;AAFV,OAAP;;AAOF;AACE,aAAOV,KAAP;AArCJ;AAuCD;AAED,OAAO,MAAMW,gBAAgB,GAAIC,SAAD,IAAe;AAC7C,SAAO;AACLV,IAAAA,IAAI,EAAE,oBADD;AAELD,IAAAA,MAAM,EAAEW;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,YAAY,GAAIC,SAAD,IAAe;AACzC,SAAO;AACLZ,IAAAA,IAAI,EAAE,eADD;AAELD,IAAAA,MAAM,EAAEa;AAFH,GAAP;AAID,CALM;AAMP,OAAO,MAAMC,mBAAmB,GAAID,SAAD,IAAe;AAChD,SAAO;AACLZ,IAAAA,IAAI,EAAE,kBADD;AAELD,IAAAA,MAAM,EAAEa;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAIF,SAAD,IAAe;AAC3C,SAAO;AACLZ,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,MAAM,EAAEa;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,eAAe,GAAIH,SAAD,IAAe;AAC5C,SAAO;AACLZ,IAAAA,IAAI,EAAE,kBADD;AAELD,IAAAA,MAAM,EAAEa;AAFH,GAAP;AAID,CALM","sourcesContent":["const initialState = {\n  allFoodtrucks: [],\n};\n\nexport default function manageFoodtruck(state = initialState, action) {\n  switch (action.type) {\n    case \"SET_ALL_FOODTRUCKS\":\n      return {\n        ...state,\n        allFoodtrucks: action.action,\n      };\n    case \"FETCH_FOODTRUCK\":\n      return {\n        ...state,\n        allFoodtrucks: action.action,\n      };\n    case \"ADD_FOODTRUCK\":\n      return {\n        ...state,\n        allFoodtrucks: [...state.allFoodtrucks, action.action],\n      };\n    case \"UPDATE_FOODTRUCK\":\n      debugger;\n      const oldIndex = state.allFoodtrucks.find((ft) => {\n          return ft.id == action.action.id;\n      })\n      const newIndex = state.allFoodtrucks.indexOf(oldIndex);\n      return {...state,\n        allFoodtrucks: [\n          state.allFoodtrucks[newIndex] = action.action\n,\n        ],\n      };\n    case \"DELETE_FOODTRUCK\":\n      return {\n        ...state,\n        allFoodtrucks: state.allFoodtrucks.splice(\n          action.action.foodtruck_id,\n          1\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nexport const setAllFoodtrucks = (allTrucks) => {\n  return {\n    type: \"SET_ALL_FOODTRUCKS\",\n    action: allTrucks,\n  };\n};\n\nexport const addFoodtruck = (foodtruck) => {\n  return {\n    type: \"ADD_FOODTRUCK\",\n    action: foodtruck,\n  };\n};\nexport const updateFoodtruckData = (foodtruck) => {\n  return {\n    type: \"UPDATE_FOODTRUCK\",\n    action: foodtruck,\n  };\n};\n\nexport const fetchFoodtruck = (foodtruck) => {\n  return {\n    type: \"FETCH_FOODTRUCK\",\n    action: foodtruck,\n  };\n};\n\nexport const deleteFoodtruck = (foodtruck) => {\n  return {\n    type: \"DELETE_FOODTRUCK\",\n    action: foodtruck,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}